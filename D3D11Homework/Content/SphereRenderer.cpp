#include "pch.h"
#include "SphereRenderer.h"

#include "..\Common\DirectXHelper.h"



using namespace D3D11Homework;

using namespace DirectX;
using namespace Windows::Foundation;

// 从文件中加载顶点和像素着色器，然后实例化立方体几何图形。
SphereRenderer::SphereRenderer(const std::shared_ptr<DX::DeviceResources>& deviceResources) :
	m_loadingComplete(false),
	m_degreesPerSecond(45),
	m_indexCount(0),
	m_tracking(false),
	m_deviceResources(deviceResources),
	m_rotatable(false)
{
	CreateDeviceDependentResources();
	CreateWindowSizeDependentResources();
}

SphereRenderer::SphereRenderer(const std::shared_ptr<DX::DeviceResources>& deviceResources, const bool rotatable, DirectX::XMFLOAT3 scale, DirectX::XMFLOAT3 transform) :
	m_loadingComplete(false),
	m_degreesPerSecond(45),
	m_indexCount(0),
	m_tracking(false),
	m_deviceResources(deviceResources),
	m_rotatable(rotatable),
	m_scale(scale),
	m_transform(transform)
{
	CreateDeviceDependentResources();
	CreateWindowSizeDependentResources();
}



// 当窗口的大小改变时初始化视图参数。
void SphereRenderer::CreateWindowSizeDependentResources()
{
	Size outputSize = m_deviceResources->GetOutputSize();
	float aspectRatio = outputSize.Width / outputSize.Height;
	float fovAngleY = 70.0f * XM_PI / 180.0f;

	// 这是一个简单的更改示例，当应用程序在纵向视图或对齐视图中时，可以进行此更改
	//。
	if (aspectRatio < 1.0f)
	{
		fovAngleY *= 2.0f;
	}

	// 请注意，OrientationTransform3D 矩阵在此处是后乘的，
	// 以正确确定场景的方向，使之与显示方向匹配。
	// 对于交换链的目标位图进行的任何绘制调用
	// 交换链呈现目标。对于到其他目标的绘制调用，
	// 不应应用此转换。

	// 此示例使用行主序矩阵利用右手坐标系。
	XMMATRIX perspectiveMatrix = XMMatrixPerspectiveFovRH(
		fovAngleY,
		aspectRatio,
		0.01f,
		100.0f
	);

	XMFLOAT4X4 orientation = m_deviceResources->GetOrientationTransform3D();

	XMMATRIX orientationMatrix = XMLoadFloat4x4(&orientation);

	XMStoreFloat4x4(
		&m_constantBufferData.projection,
		XMMatrixTranspose(perspectiveMatrix * orientationMatrix)
	);

	// 眼睛位于(0,0.7,5.5)，并沿着 Y 轴使用向上矢量查找点(0,-0.1,0)。
	static const XMVECTORF32 eye = { 0.0f, 1.7f, 5.5f, 0.0f };
	static const XMVECTORF32 at = { 0.0f, -0.1f, 0.0f, 0.0f };
	static const XMVECTORF32 up = { 0.0f, 1.0f, 0.0f, 0.0f };

	XMStoreFloat4x4(&m_constantBufferData.view, XMMatrixTranspose(XMMatrixLookAtRH(eye, at, up)));
}


// 每个帧调用一次，旋转model，并计算模型和视图矩阵。
void SphereRenderer::Update(DX::StepTimer const& timer)
{
	if (!m_tracking)
	{

		//保存累计变换
		XMMATRIX cumulativeMatrix = XMMatrixIdentity();

		// 初始化变换矩阵
		cumulativeMatrix *= XMMatrixScaling(m_scale.x, m_scale.y, m_scale.z);
		cumulativeMatrix *= XMMatrixTranslation(m_transform.x, m_transform.y, m_transform.z);

		// 具体的变换
		float radiansPerSecond = XMConvertToRadians(m_degreesPerSecond);
		double totalRotation = timer.GetTotalSeconds() * radiansPerSecond;
		XMFLOAT3 totalTransform = m_transform;
		XMFLOAT3 totalScale = m_scale;
		float radians = static_cast<float>(fmod(totalRotation, XM_2PI));
		if (m_rotatable)
			cumulativeMatrix *= XMMatrixRotationY(radians);

		// 更新模型	
		ModelUpdate(cumulativeMatrix);
	}
}

// 用合变换矩阵更新模型
void SphereRenderer::ModelUpdate(CXMMATRIX cumulativeMatrix)
{
	// 准备将更新的模型矩阵传递到着色器
	XMStoreFloat4x4(
		&m_constantBufferData.model,
		XMMatrixTranspose(
			cumulativeMatrix
		)
	);
}

void SphereRenderer::StartTracking()
{
	m_tracking = true;
}

// 进行跟踪时，可跟踪指针相对于输出屏幕宽度的位置，从而让 3D 立方体围绕其 Y 轴旋转。
void SphereRenderer::TrackingUpdate(float positionX)
{
	if (m_tracking)
	{
		float radians = XM_2PI * 2.0f * positionX / m_deviceResources->GetOutputSize().Width;
		XMMATRIX rotation_Matrix = XMMatrixRotationY(radians);
		ModelUpdate(rotation_Matrix);
	}
}

void SphereRenderer::StopTracking()
{
	m_tracking = false;
}

// 使用顶点和像素着色器呈现一个帧。
void SphereRenderer::Render()
{
	// 加载是异步的。仅在加载几何图形后才会绘制它。
	if (!m_loadingComplete)
	{
		return;
	}

	auto context = m_deviceResources->GetD3DDeviceContext();

	// 准备常量缓冲区以将其发送到图形设备。
	context->UpdateSubresource1(
		m_constantBuffer.Get(),
		0,
		NULL,
		&m_constantBufferData,
		0,
		0,
		0
	);

	// 每个顶点都是 VertexPCNT 结构的一个实例。
	UINT stride = sizeof(VertexPCNT);
	UINT offset = 0;
	context->IASetVertexBuffers(
		0,
		1,
		m_vertexBuffer.GetAddressOf(),
		&stride,
		&offset
	);

	context->IASetIndexBuffer(
		m_indexBuffer.Get(),
		DXGI_FORMAT_R16_UINT, // 每个索引都是一个 16 位无符号整数(short)。
		0
	);

	context->IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST);

	context->IASetInputLayout(m_inputLayout.Get());

	// 附加我们的顶点着色器。
	context->VSSetShader(
		m_vertexShader.Get(),
		nullptr,
		0
	);

	// 将常量缓冲区发送到图形设备。
	context->VSSetConstantBuffers1(
		0,
		1,
		m_constantBuffer.GetAddressOf(),
		nullptr,
		nullptr
	);

	// 附加我们的像素着色器。
	context->PSSetShader(
		m_pixelShader.Get(),
		nullptr,
		0
	);

	// 绘制对象。
	context->DrawIndexed(
		m_indexCount,
		0,
		0
	);
}

void SphereRenderer::CreateDeviceDependentResources()
{
	// 通过异步方式加载着色器。
	auto loadVSTask = DX::ReadDataAsync(L"VertexShader.cso");
	auto loadPSTask = DX::ReadDataAsync(L"PixelShader.cso");

	// 加载顶点着色器文件之后，创建着色器和输入布局。
	auto createVSTask = loadVSTask.then([this](const std::vector<byte>& fileData) {
		DX::ThrowIfFailed(
			m_deviceResources->GetD3DDevice()->CreateVertexShader(
				&fileData[0],
				fileData.size(),
				nullptr,
				&m_vertexShader
			)
		);

		static const D3D11_INPUT_ELEMENT_DESC vertexDesc[] =
		{
			{ "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },
			{ "NORMAL", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 12, D3D11_INPUT_PER_VERTEX_DATA, 0 },
			{ "TEXCOORD", 0, DXGI_FORMAT_R32G32_FLOAT, 0, 24, D3D11_INPUT_PER_VERTEX_DATA, 0 },
		};

		DX::ThrowIfFailed(
			m_deviceResources->GetD3DDevice()->CreateInputLayout(
				vertexDesc,
				ARRAYSIZE(vertexDesc),
				&fileData[0],
				fileData.size(),
				&m_inputLayout
			)
		);
	});

	// 加载像素着色器文件后，创建着色器和常量缓冲区。
	auto createPSTask = loadPSTask.then([this](const std::vector<byte>& fileData) {
		DX::ThrowIfFailed(
			m_deviceResources->GetD3DDevice()->CreatePixelShader(
				&fileData[0],
				fileData.size(),
				nullptr,
				&m_pixelShader
			)
		);

		CD3D11_BUFFER_DESC constantBufferDesc(sizeof(ModelViewProjectionConstantBuffer), D3D11_BIND_CONSTANT_BUFFER);
		DX::ThrowIfFailed(
			m_deviceResources->GetD3DDevice()->CreateBuffer(
				&constantBufferDesc,
				nullptr,
				&m_constantBuffer
			)
		);
	});

	// 加载两个着色器后，创建网格。
	auto createSphereTask = (createPSTask && createVSTask).then([this]() {

		// 加载网格顶点。每个顶点都有一个位置和一个颜色。
		
		static const VertexPCNT SphereVertices[] =
		{
			{ XMFLOAT3(0.000000f, -1.000000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.435890f, -0.900000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.433502f, -0.900000f, 0.045563f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.426365f, -0.900000f, 0.090627f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.414556f, -0.900000f, 0.134697f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.398205f, -0.900000f, 0.177292f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.377492f, -0.900000f, 0.217945f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.352642f, -0.900000f, 0.256210f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.323929f, -0.900000f, 0.291667f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.291667f, -0.900000f, 0.323929f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.256210f, -0.900000f, 0.352642f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.217945f, -0.900000f, 0.377492f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.177292f, -0.900000f, 0.398205f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.134697f, -0.900000f, 0.414556f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.090627f, -0.900000f, 0.426365f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.045563f, -0.900000f, 0.433502f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, -0.900000f, 0.435890f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.045563f, -0.900000f, 0.433502f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.090627f, -0.900000f, 0.426365f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.134697f, -0.900000f, 0.414556f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.177292f, -0.900000f, 0.398205f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.217945f, -0.900000f, 0.377492f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.256210f, -0.900000f, 0.352642f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.291667f, -0.900000f, 0.323929f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.323929f, -0.900000f, 0.291667f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.352642f, -0.900000f, 0.256210f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.377492f, -0.900000f, 0.217945f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.398205f, -0.900000f, 0.177292f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.414556f, -0.900000f, 0.134697f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.426365f, -0.900000f, 0.090627f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.433502f, -0.900000f, 0.045563f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.435890f, -0.900000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.433502f, -0.900000f, -0.045563f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.426365f, -0.900000f, -0.090627f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.414556f, -0.900000f, -0.134697f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.398205f, -0.900000f, -0.177292f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.377492f, -0.900000f, -0.217945f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.352642f, -0.900000f, -0.256210f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.323929f, -0.900000f, -0.291667f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.291667f, -0.900000f, -0.323929f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.256210f, -0.900000f, -0.352642f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.217945f, -0.900000f, -0.377492f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.177292f, -0.900000f, -0.398205f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.134697f, -0.900000f, -0.414556f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.090627f, -0.900000f, -0.426365f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.045563f, -0.900000f, -0.433502f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, -0.900000f, -0.435890f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.045563f, -0.900000f, -0.433502f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.090627f, -0.900000f, -0.426365f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.134697f, -0.900000f, -0.414556f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.177292f, -0.900000f, -0.398205f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.217945f, -0.900000f, -0.377492f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.256210f, -0.900000f, -0.352642f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.291667f, -0.900000f, -0.323929f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.323929f, -0.900000f, -0.291667f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.352642f, -0.900000f, -0.256210f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.377492f, -0.900000f, -0.217945f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.398205f, -0.900000f, -0.177292f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.414556f, -0.900000f, -0.134697f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.426365f, -0.900000f, -0.090627f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.433502f, -0.900000f, -0.045563f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.600000f, -0.800000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.596713f, -0.800000f, 0.062717f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.586889f, -0.800000f, 0.124747f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.570634f, -0.800000f, 0.185410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.548127f, -0.800000f, 0.244042f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.519615f, -0.800000f, 0.300000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.485410f, -0.800000f, 0.352671f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.445887f, -0.800000f, 0.401478f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.401478f, -0.800000f, 0.445887f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.352671f, -0.800000f, 0.485410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.300000f, -0.800000f, 0.519615f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.244042f, -0.800000f, 0.548127f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.185410f, -0.800000f, 0.570634f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.124747f, -0.800000f, 0.586889f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.062717f, -0.800000f, 0.596713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, -0.800000f, 0.600000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.062717f, -0.800000f, 0.596713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.124747f, -0.800000f, 0.586889f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.185410f, -0.800000f, 0.570634f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.244042f, -0.800000f, 0.548127f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.300000f, -0.800000f, 0.519615f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.352671f, -0.800000f, 0.485410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.401478f, -0.800000f, 0.445887f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.445887f, -0.800000f, 0.401478f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.485410f, -0.800000f, 0.352671f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.519615f, -0.800000f, 0.300000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.548127f, -0.800000f, 0.244042f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.570634f, -0.800000f, 0.185410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.586889f, -0.800000f, 0.124747f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.596713f, -0.800000f, 0.062717f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.600000f, -0.800000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.596713f, -0.800000f, -0.062717f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.586889f, -0.800000f, -0.124747f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.570634f, -0.800000f, -0.185410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.548127f, -0.800000f, -0.244042f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.519615f, -0.800000f, -0.300000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.485410f, -0.800000f, -0.352671f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.445887f, -0.800000f, -0.401478f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.401478f, -0.800000f, -0.445887f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.352671f, -0.800000f, -0.485410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.300000f, -0.800000f, -0.519615f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.244042f, -0.800000f, -0.548127f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.185410f, -0.800000f, -0.570634f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.124747f, -0.800000f, -0.586889f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.062717f, -0.800000f, -0.596713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, -0.800000f, -0.600000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.062717f, -0.800000f, -0.596713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.124747f, -0.800000f, -0.586889f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.185410f, -0.800000f, -0.570634f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.244042f, -0.800000f, -0.548127f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.300000f, -0.800000f, -0.519615f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.352671f, -0.800000f, -0.485410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.401478f, -0.800000f, -0.445887f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.445887f, -0.800000f, -0.401478f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.485410f, -0.800000f, -0.352671f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.519615f, -0.800000f, -0.300000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.548127f, -0.800000f, -0.244042f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.570634f, -0.800000f, -0.185410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.586889f, -0.800000f, -0.124747f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.596713f, -0.800000f, -0.062717f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.714143f, -0.700000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.710231f, -0.700000f, 0.074648f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.698537f, -0.700000f, 0.148479f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.679190f, -0.700000f, 0.220682f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.652402f, -0.700000f, 0.290468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.618466f, -0.700000f, 0.357071f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.577754f, -0.700000f, 0.419763f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.530712f, -0.700000f, 0.477855f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.477855f, -0.700000f, 0.530712f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.419763f, -0.700000f, 0.577754f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.357071f, -0.700000f, 0.618466f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.290468f, -0.700000f, 0.652402f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.220682f, -0.700000f, 0.679190f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.148479f, -0.700000f, 0.698537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.074648f, -0.700000f, 0.710231f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, -0.700000f, 0.714143f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.074648f, -0.700000f, 0.710231f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.148479f, -0.700000f, 0.698537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.220682f, -0.700000f, 0.679190f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.290468f, -0.700000f, 0.652402f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.357071f, -0.700000f, 0.618466f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.419763f, -0.700000f, 0.577754f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.477855f, -0.700000f, 0.530712f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.530712f, -0.700000f, 0.477855f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.577754f, -0.700000f, 0.419763f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.618466f, -0.700000f, 0.357071f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.652402f, -0.700000f, 0.290468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.679190f, -0.700000f, 0.220682f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.698537f, -0.700000f, 0.148479f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.710231f, -0.700000f, 0.074648f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.714143f, -0.700000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.710231f, -0.700000f, -0.074648f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.698537f, -0.700000f, -0.148479f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.679190f, -0.700000f, -0.220682f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.652402f, -0.700000f, -0.290468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.618466f, -0.700000f, -0.357071f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.577754f, -0.700000f, -0.419763f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.530712f, -0.700000f, -0.477855f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.477855f, -0.700000f, -0.530712f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.419763f, -0.700000f, -0.577754f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.357071f, -0.700000f, -0.618466f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.290468f, -0.700000f, -0.652402f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.220682f, -0.700000f, -0.679190f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.148479f, -0.700000f, -0.698537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.074648f, -0.700000f, -0.710231f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, -0.700000f, -0.714143f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.074648f, -0.700000f, -0.710231f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.148479f, -0.700000f, -0.698537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.220682f, -0.700000f, -0.679190f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.290468f, -0.700000f, -0.652402f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.357071f, -0.700000f, -0.618466f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.419763f, -0.700000f, -0.577754f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.477855f, -0.700000f, -0.530712f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.530712f, -0.700000f, -0.477855f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.577754f, -0.700000f, -0.419763f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.618466f, -0.700000f, -0.357071f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.652402f, -0.700000f, -0.290468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.679190f, -0.700000f, -0.220682f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.698537f, -0.700000f, -0.148479f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.710231f, -0.700000f, -0.074648f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.800000f, -0.600000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.795618f, -0.600000f, 0.083623f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.782518f, -0.600000f, 0.166329f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.760845f, -0.600000f, 0.247214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.730836f, -0.600000f, 0.325389f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.692820f, -0.600000f, 0.400000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.647214f, -0.600000f, 0.470228f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.594516f, -0.600000f, 0.535304f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.535304f, -0.600000f, 0.594516f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.470228f, -0.600000f, 0.647214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.400000f, -0.600000f, 0.692820f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.325389f, -0.600000f, 0.730836f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.247214f, -0.600000f, 0.760845f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.166329f, -0.600000f, 0.782518f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.083623f, -0.600000f, 0.795618f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, -0.600000f, 0.800000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.083623f, -0.600000f, 0.795618f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.166329f, -0.600000f, 0.782518f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.247214f, -0.600000f, 0.760845f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.325389f, -0.600000f, 0.730836f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.400000f, -0.600000f, 0.692820f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.470228f, -0.600000f, 0.647214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.535304f, -0.600000f, 0.594516f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.594516f, -0.600000f, 0.535304f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.647214f, -0.600000f, 0.470228f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.692820f, -0.600000f, 0.400000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.730836f, -0.600000f, 0.325389f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.760845f, -0.600000f, 0.247214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.782518f, -0.600000f, 0.166329f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.795618f, -0.600000f, 0.083623f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.800000f, -0.600000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.795618f, -0.600000f, -0.083623f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.782518f, -0.600000f, -0.166329f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.760845f, -0.600000f, -0.247214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.730836f, -0.600000f, -0.325389f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.692820f, -0.600000f, -0.400000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.647214f, -0.600000f, -0.470228f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.594516f, -0.600000f, -0.535304f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.535304f, -0.600000f, -0.594516f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.470228f, -0.600000f, -0.647214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.400000f, -0.600000f, -0.692820f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.325389f, -0.600000f, -0.730836f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.247214f, -0.600000f, -0.760845f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.166329f, -0.600000f, -0.782518f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.083623f, -0.600000f, -0.795618f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, -0.600000f, -0.800000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.083623f, -0.600000f, -0.795618f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.166329f, -0.600000f, -0.782518f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.247214f, -0.600000f, -0.760845f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.325389f, -0.600000f, -0.730836f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.400000f, -0.600000f, -0.692820f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.470228f, -0.600000f, -0.647214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.535304f, -0.600000f, -0.594516f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.594516f, -0.600000f, -0.535304f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.647214f, -0.600000f, -0.470228f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.692820f, -0.600000f, -0.400000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.730836f, -0.600000f, -0.325389f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.760845f, -0.600000f, -0.247214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.782518f, -0.600000f, -0.166329f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.795618f, -0.600000f, -0.083623f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.866025f, -0.500000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.861281f, -0.500000f, 0.090524f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.847101f, -0.500000f, 0.180057f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.823639f, -0.500000f, 0.267617f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.791154f, -0.500000f, 0.352244f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.750000f, -0.500000f, 0.433013f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.700629f, -0.500000f, 0.509037f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.643582f, -0.500000f, 0.579484f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.579484f, -0.500000f, 0.643582f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.509037f, -0.500000f, 0.700629f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.433013f, -0.500000f, 0.750000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.352244f, -0.500000f, 0.791154f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.267617f, -0.500000f, 0.823639f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.180057f, -0.500000f, 0.847101f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.090524f, -0.500000f, 0.861281f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, -0.500000f, 0.866025f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.090524f, -0.500000f, 0.861281f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.180057f, -0.500000f, 0.847101f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.267617f, -0.500000f, 0.823639f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.352244f, -0.500000f, 0.791154f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.433013f, -0.500000f, 0.750000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.509037f, -0.500000f, 0.700629f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.579484f, -0.500000f, 0.643582f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.643582f, -0.500000f, 0.579484f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.700629f, -0.500000f, 0.509037f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.750000f, -0.500000f, 0.433013f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.791154f, -0.500000f, 0.352244f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.823639f, -0.500000f, 0.267617f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.847101f, -0.500000f, 0.180057f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.861281f, -0.500000f, 0.090524f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.866025f, -0.500000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.861281f, -0.500000f, -0.090524f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.847101f, -0.500000f, -0.180057f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.823639f, -0.500000f, -0.267617f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.791154f, -0.500000f, -0.352244f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.750000f, -0.500000f, -0.433013f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.700629f, -0.500000f, -0.509037f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.643582f, -0.500000f, -0.579484f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.579484f, -0.500000f, -0.643582f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.509037f, -0.500000f, -0.700629f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.433013f, -0.500000f, -0.750000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.352244f, -0.500000f, -0.791154f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.267617f, -0.500000f, -0.823639f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.180057f, -0.500000f, -0.847101f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.090524f, -0.500000f, -0.861281f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, -0.500000f, -0.866025f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.090524f, -0.500000f, -0.861281f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.180057f, -0.500000f, -0.847101f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.267617f, -0.500000f, -0.823639f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.352244f, -0.500000f, -0.791154f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.433013f, -0.500000f, -0.750000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.509037f, -0.500000f, -0.700629f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.579484f, -0.500000f, -0.643582f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.643582f, -0.500000f, -0.579484f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.700629f, -0.500000f, -0.509037f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.750000f, -0.500000f, -0.433013f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.791154f, -0.500000f, -0.352244f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.823639f, -0.500000f, -0.267617f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.847101f, -0.500000f, -0.180057f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.861281f, -0.500000f, -0.090524f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.916515f, -0.400000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.911494f, -0.400000f, 0.095802f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.896487f, -0.400000f, 0.190554f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.871658f, -0.400000f, 0.283219f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.837278f, -0.400000f, 0.372780f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.793725f, -0.400000f, 0.458258f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.741476f, -0.400000f, 0.538714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.681103f, -0.400000f, 0.613268f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.613268f, -0.400000f, 0.681103f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.538714f, -0.400000f, 0.741476f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.458258f, -0.400000f, 0.793725f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.372780f, -0.400000f, 0.837278f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.283219f, -0.400000f, 0.871658f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.190554f, -0.400000f, 0.896487f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.095802f, -0.400000f, 0.911494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, -0.400000f, 0.916515f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.095802f, -0.400000f, 0.911494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.190554f, -0.400000f, 0.896487f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.283219f, -0.400000f, 0.871658f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.372780f, -0.400000f, 0.837278f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.458258f, -0.400000f, 0.793725f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.538714f, -0.400000f, 0.741476f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.613268f, -0.400000f, 0.681103f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.681103f, -0.400000f, 0.613268f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.741476f, -0.400000f, 0.538714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.793725f, -0.400000f, 0.458258f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.837278f, -0.400000f, 0.372780f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.871658f, -0.400000f, 0.283219f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.896487f, -0.400000f, 0.190554f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.911494f, -0.400000f, 0.095802f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.916515f, -0.400000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.911494f, -0.400000f, -0.095802f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.896487f, -0.400000f, -0.190554f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.871658f, -0.400000f, -0.283219f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.837278f, -0.400000f, -0.372780f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.793725f, -0.400000f, -0.458258f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.741476f, -0.400000f, -0.538714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.681103f, -0.400000f, -0.613268f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.613268f, -0.400000f, -0.681103f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.538714f, -0.400000f, -0.741476f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.458258f, -0.400000f, -0.793725f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.372780f, -0.400000f, -0.837278f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.283219f, -0.400000f, -0.871658f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.190554f, -0.400000f, -0.896487f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.095802f, -0.400000f, -0.911494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, -0.400000f, -0.916515f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.095802f, -0.400000f, -0.911494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.190554f, -0.400000f, -0.896487f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.283219f, -0.400000f, -0.871658f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.372780f, -0.400000f, -0.837278f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.458258f, -0.400000f, -0.793725f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.538714f, -0.400000f, -0.741476f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.613268f, -0.400000f, -0.681103f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.681103f, -0.400000f, -0.613268f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.741476f, -0.400000f, -0.538714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.793725f, -0.400000f, -0.458258f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.837278f, -0.400000f, -0.372780f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.871658f, -0.400000f, -0.283219f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.896487f, -0.400000f, -0.190554f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.911494f, -0.400000f, -0.095802f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.953939f, -0.300000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.948713f, -0.300000f, 0.099714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.933093f, -0.300000f, 0.198335f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.907250f, -0.300000f, 0.294783f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.871467f, -0.300000f, 0.388002f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.826136f, -0.300000f, 0.476970f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.771753f, -0.300000f, 0.560711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.708915f, -0.300000f, 0.638310f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.638310f, -0.300000f, 0.708915f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.560711f, -0.300000f, 0.771753f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.476970f, -0.300000f, 0.826136f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.388002f, -0.300000f, 0.871467f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.294783f, -0.300000f, 0.907250f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.198335f, -0.300000f, 0.933093f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.099714f, -0.300000f, 0.948713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, -0.300000f, 0.953939f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.099714f, -0.300000f, 0.948713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.198335f, -0.300000f, 0.933093f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.294783f, -0.300000f, 0.907250f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.388002f, -0.300000f, 0.871467f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.476970f, -0.300000f, 0.826136f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.560711f, -0.300000f, 0.771753f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.638310f, -0.300000f, 0.708915f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.708915f, -0.300000f, 0.638310f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.771753f, -0.300000f, 0.560711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.826136f, -0.300000f, 0.476970f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.871467f, -0.300000f, 0.388002f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.907250f, -0.300000f, 0.294783f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.933093f, -0.300000f, 0.198335f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.948713f, -0.300000f, 0.099714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.953939f, -0.300000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.948713f, -0.300000f, -0.099714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.933093f, -0.300000f, -0.198335f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.907250f, -0.300000f, -0.294783f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.871467f, -0.300000f, -0.388002f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.826136f, -0.300000f, -0.476970f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.771753f, -0.300000f, -0.560711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.708915f, -0.300000f, -0.638310f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.638310f, -0.300000f, -0.708915f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.560711f, -0.300000f, -0.771753f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.476970f, -0.300000f, -0.826136f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.388002f, -0.300000f, -0.871467f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.294783f, -0.300000f, -0.907250f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.198335f, -0.300000f, -0.933093f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.099714f, -0.300000f, -0.948713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, -0.300000f, -0.953939f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.099714f, -0.300000f, -0.948713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.198335f, -0.300000f, -0.933093f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.294783f, -0.300000f, -0.907250f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.388002f, -0.300000f, -0.871467f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.476970f, -0.300000f, -0.826136f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.560711f, -0.300000f, -0.771753f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.638310f, -0.300000f, -0.708915f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.708915f, -0.300000f, -0.638310f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.771753f, -0.300000f, -0.560711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.826136f, -0.300000f, -0.476970f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.871467f, -0.300000f, -0.388002f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.907250f, -0.300000f, -0.294783f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.933093f, -0.300000f, -0.198335f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.948713f, -0.300000f, -0.099714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.979796f, -0.200000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.974428f, -0.200000f, 0.102417f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.958385f, -0.200000f, 0.203711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.931841f, -0.200000f, 0.302774f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.895088f, -0.200000f, 0.398519f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.848528f, -0.200000f, 0.489898f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.792672f, -0.200000f, 0.575910f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.728130f, -0.200000f, 0.655611f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.655611f, -0.200000f, 0.728130f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.575910f, -0.200000f, 0.792672f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.489898f, -0.200000f, 0.848528f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.398519f, -0.200000f, 0.895088f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.302774f, -0.200000f, 0.931841f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.203711f, -0.200000f, 0.958385f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.102417f, -0.200000f, 0.974428f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, -0.200000f, 0.979796f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.102417f, -0.200000f, 0.974428f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.203711f, -0.200000f, 0.958385f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.302774f, -0.200000f, 0.931841f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.398519f, -0.200000f, 0.895088f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.489898f, -0.200000f, 0.848528f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.575910f, -0.200000f, 0.792672f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.655611f, -0.200000f, 0.728130f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.728130f, -0.200000f, 0.655611f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.792672f, -0.200000f, 0.575910f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.848528f, -0.200000f, 0.489898f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.895088f, -0.200000f, 0.398519f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.931841f, -0.200000f, 0.302774f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.958385f, -0.200000f, 0.203711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.974428f, -0.200000f, 0.102417f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.979796f, -0.200000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.974428f, -0.200000f, -0.102417f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.958385f, -0.200000f, -0.203711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.931841f, -0.200000f, -0.302774f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.895088f, -0.200000f, -0.398519f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.848528f, -0.200000f, -0.489898f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.792672f, -0.200000f, -0.575910f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.728130f, -0.200000f, -0.655611f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.655611f, -0.200000f, -0.728130f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.575910f, -0.200000f, -0.792672f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.489898f, -0.200000f, -0.848528f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.398519f, -0.200000f, -0.895088f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.302774f, -0.200000f, -0.931841f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.203711f, -0.200000f, -0.958385f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.102417f, -0.200000f, -0.974428f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, -0.200000f, -0.979796f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.102417f, -0.200000f, -0.974428f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.203711f, -0.200000f, -0.958385f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.302774f, -0.200000f, -0.931841f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.398519f, -0.200000f, -0.895088f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.489898f, -0.200000f, -0.848528f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.575910f, -0.200000f, -0.792672f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.655611f, -0.200000f, -0.728130f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.728130f, -0.200000f, -0.655611f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.792672f, -0.200000f, -0.575910f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.848528f, -0.200000f, -0.489898f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.895088f, -0.200000f, -0.398519f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.931841f, -0.200000f, -0.302774f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.958385f, -0.200000f, -0.203711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.974428f, -0.200000f, -0.102417f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.994987f, -0.100000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.989537f, -0.100000f, 0.104005f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.973245f, -0.100000f, 0.206870f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.946289f, -0.100000f, 0.307468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.908966f, -0.100000f, 0.404698f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.861684f, -0.100000f, 0.497494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.804962f, -0.100000f, 0.584839f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.739420f, -0.100000f, 0.665777f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.665777f, -0.100000f, 0.739420f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.584839f, -0.100000f, 0.804962f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.497494f, -0.100000f, 0.861684f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.404698f, -0.100000f, 0.908966f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.307468f, -0.100000f, 0.946289f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.206870f, -0.100000f, 0.973245f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.104005f, -0.100000f, 0.989537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, -0.100000f, 0.994987f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.104005f, -0.100000f, 0.989537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.206870f, -0.100000f, 0.973245f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.307468f, -0.100000f, 0.946289f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.404698f, -0.100000f, 0.908966f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.497494f, -0.100000f, 0.861684f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.584839f, -0.100000f, 0.804962f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.665777f, -0.100000f, 0.739420f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.739420f, -0.100000f, 0.665777f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.804962f, -0.100000f, 0.584839f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.861684f, -0.100000f, 0.497494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.908966f, -0.100000f, 0.404698f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.946289f, -0.100000f, 0.307468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.973245f, -0.100000f, 0.206870f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.989537f, -0.100000f, 0.104005f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.994987f, -0.100000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.989537f, -0.100000f, -0.104005f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.973245f, -0.100000f, -0.206870f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.946289f, -0.100000f, -0.307468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.908966f, -0.100000f, -0.404698f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.861684f, -0.100000f, -0.497494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.804962f, -0.100000f, -0.584839f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.739420f, -0.100000f, -0.665777f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.665777f, -0.100000f, -0.739420f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.584839f, -0.100000f, -0.804962f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.497494f, -0.100000f, -0.861684f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.404698f, -0.100000f, -0.908966f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.307468f, -0.100000f, -0.946289f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.206870f, -0.100000f, -0.973245f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.104005f, -0.100000f, -0.989537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, -0.100000f, -0.994987f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.104005f, -0.100000f, -0.989537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.206870f, -0.100000f, -0.973245f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.307468f, -0.100000f, -0.946289f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.404698f, -0.100000f, -0.908966f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.497494f, -0.100000f, -0.861684f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.584839f, -0.100000f, -0.804962f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.665777f, -0.100000f, -0.739420f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.739420f, -0.100000f, -0.665777f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.804962f, -0.100000f, -0.584839f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.861684f, -0.100000f, -0.497494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.908966f, -0.100000f, -0.404698f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.946289f, -0.100000f, -0.307468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.973245f, -0.100000f, -0.206870f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.989537f, -0.100000f, -0.104005f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(1.000000f, 0.000000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.994522f, 0.000000f, 0.104528f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.978148f, 0.000000f, 0.207912f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.951057f, 0.000000f, 0.309017f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.913545f, 0.000000f, 0.406737f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.866025f, 0.000000f, 0.500000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.809017f, 0.000000f, 0.587785f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.743145f, 0.000000f, 0.669131f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.669131f, 0.000000f, 0.743145f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.587785f, 0.000000f, 0.809017f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.500000f, 0.000000f, 0.866025f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.406737f, 0.000000f, 0.913545f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.309017f, 0.000000f, 0.951057f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.207912f, 0.000000f, 0.978148f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.104528f, 0.000000f, 0.994522f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, 0.000000f, 1.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.104528f, 0.000000f, 0.994522f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.207912f, 0.000000f, 0.978148f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.309017f, 0.000000f, 0.951057f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.406737f, 0.000000f, 0.913545f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.500000f, 0.000000f, 0.866025f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.587785f, 0.000000f, 0.809017f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.669131f, 0.000000f, 0.743145f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.743145f, 0.000000f, 0.669131f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.809017f, 0.000000f, 0.587785f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.866025f, 0.000000f, 0.500000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.913545f, 0.000000f, 0.406737f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.951057f, 0.000000f, 0.309017f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.978148f, 0.000000f, 0.207912f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.994522f, 0.000000f, 0.104528f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-1.000000f, 0.000000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.994522f, 0.000000f, -0.104528f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.978148f, 0.000000f, -0.207912f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.951057f, 0.000000f, -0.309017f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.913545f, 0.000000f, -0.406737f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.866025f, 0.000000f, -0.500000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.809017f, 0.000000f, -0.587785f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.743145f, 0.000000f, -0.669131f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.669131f, 0.000000f, -0.743145f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.587785f, 0.000000f, -0.809017f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.500000f, 0.000000f, -0.866025f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.406737f, 0.000000f, -0.913545f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.309017f, 0.000000f, -0.951057f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.207912f, 0.000000f, -0.978148f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.104528f, 0.000000f, -0.994522f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, 0.000000f, -1.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.104528f, 0.000000f, -0.994522f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.207912f, 0.000000f, -0.978148f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.309017f, 0.000000f, -0.951057f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.406737f, 0.000000f, -0.913545f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.500000f, 0.000000f, -0.866025f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.587785f, 0.000000f, -0.809017f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.669131f, 0.000000f, -0.743145f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.743145f, 0.000000f, -0.669131f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.809017f, 0.000000f, -0.587785f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.866025f, 0.000000f, -0.500000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.913545f, 0.000000f, -0.406737f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.951057f, 0.000000f, -0.309017f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.978148f, 0.000000f, -0.207912f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.994522f, 0.000000f, -0.104528f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.994987f, 0.100000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.989537f, 0.100000f, 0.104005f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.973245f, 0.100000f, 0.206870f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.946289f, 0.100000f, 0.307468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.908966f, 0.100000f, 0.404698f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.861684f, 0.100000f, 0.497494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.804962f, 0.100000f, 0.584839f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.739420f, 0.100000f, 0.665777f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.665777f, 0.100000f, 0.739420f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.584839f, 0.100000f, 0.804962f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.497494f, 0.100000f, 0.861684f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.404698f, 0.100000f, 0.908966f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.307468f, 0.100000f, 0.946289f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.206870f, 0.100000f, 0.973245f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.104005f, 0.100000f, 0.989537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, 0.100000f, 0.994987f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.104005f, 0.100000f, 0.989537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.206870f, 0.100000f, 0.973245f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.307468f, 0.100000f, 0.946289f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.404698f, 0.100000f, 0.908966f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.497494f, 0.100000f, 0.861684f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.584839f, 0.100000f, 0.804962f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.665777f, 0.100000f, 0.739420f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.739420f, 0.100000f, 0.665777f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.804962f, 0.100000f, 0.584839f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.861684f, 0.100000f, 0.497494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.908966f, 0.100000f, 0.404698f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.946289f, 0.100000f, 0.307468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.973245f, 0.100000f, 0.206870f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.989537f, 0.100000f, 0.104005f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.994987f, 0.100000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.989537f, 0.100000f, -0.104005f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.973245f, 0.100000f, -0.206870f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.946289f, 0.100000f, -0.307468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.908966f, 0.100000f, -0.404698f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.861684f, 0.100000f, -0.497494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.804962f, 0.100000f, -0.584839f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.739420f, 0.100000f, -0.665777f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.665777f, 0.100000f, -0.739420f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.584839f, 0.100000f, -0.804962f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.497494f, 0.100000f, -0.861684f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.404698f, 0.100000f, -0.908966f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.307468f, 0.100000f, -0.946289f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.206870f, 0.100000f, -0.973245f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.104005f, 0.100000f, -0.989537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, 0.100000f, -0.994987f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.104005f, 0.100000f, -0.989537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.206870f, 0.100000f, -0.973245f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.307468f, 0.100000f, -0.946289f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.404698f, 0.100000f, -0.908966f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.497494f, 0.100000f, -0.861684f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.584839f, 0.100000f, -0.804962f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.665777f, 0.100000f, -0.739420f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.739420f, 0.100000f, -0.665777f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.804962f, 0.100000f, -0.584839f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.861684f, 0.100000f, -0.497494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.908966f, 0.100000f, -0.404698f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.946289f, 0.100000f, -0.307468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.973245f, 0.100000f, -0.206870f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.989537f, 0.100000f, -0.104005f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.979796f, 0.200000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.974428f, 0.200000f, 0.102417f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.958385f, 0.200000f, 0.203711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.931841f, 0.200000f, 0.302774f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.895088f, 0.200000f, 0.398519f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.848528f, 0.200000f, 0.489898f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.792672f, 0.200000f, 0.575910f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.728130f, 0.200000f, 0.655611f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.655611f, 0.200000f, 0.728130f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.575910f, 0.200000f, 0.792672f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.489898f, 0.200000f, 0.848528f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.398519f, 0.200000f, 0.895088f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.302774f, 0.200000f, 0.931841f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.203711f, 0.200000f, 0.958385f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.102417f, 0.200000f, 0.974428f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, 0.200000f, 0.979796f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.102417f, 0.200000f, 0.974428f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.203711f, 0.200000f, 0.958385f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.302774f, 0.200000f, 0.931841f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.398519f, 0.200000f, 0.895088f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.489898f, 0.200000f, 0.848528f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.575910f, 0.200000f, 0.792672f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.655611f, 0.200000f, 0.728130f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.728130f, 0.200000f, 0.655611f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.792672f, 0.200000f, 0.575910f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.848528f, 0.200000f, 0.489898f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.895088f, 0.200000f, 0.398519f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.931841f, 0.200000f, 0.302774f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.958385f, 0.200000f, 0.203711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.974428f, 0.200000f, 0.102417f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.979796f, 0.200000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.974428f, 0.200000f, -0.102417f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.958385f, 0.200000f, -0.203711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.931841f, 0.200000f, -0.302774f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.895088f, 0.200000f, -0.398519f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.848528f, 0.200000f, -0.489898f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.792672f, 0.200000f, -0.575910f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.728130f, 0.200000f, -0.655611f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.655611f, 0.200000f, -0.728130f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.575910f, 0.200000f, -0.792672f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.489898f, 0.200000f, -0.848528f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.398519f, 0.200000f, -0.895088f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.302774f, 0.200000f, -0.931841f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.203711f, 0.200000f, -0.958385f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.102417f, 0.200000f, -0.974428f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, 0.200000f, -0.979796f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.102417f, 0.200000f, -0.974428f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.203711f, 0.200000f, -0.958385f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.302774f, 0.200000f, -0.931841f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.398519f, 0.200000f, -0.895088f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.489898f, 0.200000f, -0.848528f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.575910f, 0.200000f, -0.792672f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.655611f, 0.200000f, -0.728130f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.728130f, 0.200000f, -0.655611f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.792672f, 0.200000f, -0.575910f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.848528f, 0.200000f, -0.489898f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.895088f, 0.200000f, -0.398519f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.931841f, 0.200000f, -0.302774f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.958385f, 0.200000f, -0.203711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.974428f, 0.200000f, -0.102417f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.953939f, 0.300000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.948713f, 0.300000f, 0.099714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.933093f, 0.300000f, 0.198335f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.907250f, 0.300000f, 0.294783f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.871467f, 0.300000f, 0.388002f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.826136f, 0.300000f, 0.476970f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.771753f, 0.300000f, 0.560711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.708915f, 0.300000f, 0.638310f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.638310f, 0.300000f, 0.708915f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.560711f, 0.300000f, 0.771753f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.476970f, 0.300000f, 0.826136f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.388002f, 0.300000f, 0.871467f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.294783f, 0.300000f, 0.907250f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.198335f, 0.300000f, 0.933093f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.099714f, 0.300000f, 0.948713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, 0.300000f, 0.953939f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.099714f, 0.300000f, 0.948713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.198335f, 0.300000f, 0.933093f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.294783f, 0.300000f, 0.907250f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.388002f, 0.300000f, 0.871467f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.476970f, 0.300000f, 0.826136f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.560711f, 0.300000f, 0.771753f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.638310f, 0.300000f, 0.708915f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.708915f, 0.300000f, 0.638310f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.771753f, 0.300000f, 0.560711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.826136f, 0.300000f, 0.476970f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.871467f, 0.300000f, 0.388002f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.907250f, 0.300000f, 0.294783f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.933093f, 0.300000f, 0.198335f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.948713f, 0.300000f, 0.099714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.953939f, 0.300000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.948713f, 0.300000f, -0.099714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.933093f, 0.300000f, -0.198335f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.907250f, 0.300000f, -0.294783f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.871467f, 0.300000f, -0.388002f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.826136f, 0.300000f, -0.476970f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.771753f, 0.300000f, -0.560711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.708915f, 0.300000f, -0.638310f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.638310f, 0.300000f, -0.708915f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.560711f, 0.300000f, -0.771753f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.476970f, 0.300000f, -0.826136f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.388002f, 0.300000f, -0.871467f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.294783f, 0.300000f, -0.907250f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.198335f, 0.300000f, -0.933093f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.099714f, 0.300000f, -0.948713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, 0.300000f, -0.953939f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.099714f, 0.300000f, -0.948713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.198335f, 0.300000f, -0.933093f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.294783f, 0.300000f, -0.907250f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.388002f, 0.300000f, -0.871467f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.476970f, 0.300000f, -0.826136f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.560711f, 0.300000f, -0.771753f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.638310f, 0.300000f, -0.708915f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.708915f, 0.300000f, -0.638310f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.771753f, 0.300000f, -0.560711f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.826136f, 0.300000f, -0.476970f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.871467f, 0.300000f, -0.388002f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.907250f, 0.300000f, -0.294783f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.933093f, 0.300000f, -0.198335f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.948713f, 0.300000f, -0.099714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.916515f, 0.400000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.911494f, 0.400000f, 0.095802f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.896487f, 0.400000f, 0.190554f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.871658f, 0.400000f, 0.283219f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.837278f, 0.400000f, 0.372780f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.793725f, 0.400000f, 0.458258f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.741476f, 0.400000f, 0.538714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.681103f, 0.400000f, 0.613268f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.613268f, 0.400000f, 0.681103f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.538714f, 0.400000f, 0.741476f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.458258f, 0.400000f, 0.793725f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.372780f, 0.400000f, 0.837278f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.283219f, 0.400000f, 0.871658f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.190554f, 0.400000f, 0.896487f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.095802f, 0.400000f, 0.911494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, 0.400000f, 0.916515f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.095802f, 0.400000f, 0.911494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.190554f, 0.400000f, 0.896487f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.283219f, 0.400000f, 0.871658f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.372780f, 0.400000f, 0.837278f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.458258f, 0.400000f, 0.793725f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.538714f, 0.400000f, 0.741476f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.613268f, 0.400000f, 0.681103f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.681103f, 0.400000f, 0.613268f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.741476f, 0.400000f, 0.538714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.793725f, 0.400000f, 0.458258f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.837278f, 0.400000f, 0.372780f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.871658f, 0.400000f, 0.283219f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.896487f, 0.400000f, 0.190554f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.911494f, 0.400000f, 0.095802f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.916515f, 0.400000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.911494f, 0.400000f, -0.095802f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.896487f, 0.400000f, -0.190554f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.871658f, 0.400000f, -0.283219f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.837278f, 0.400000f, -0.372780f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.793725f, 0.400000f, -0.458258f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.741476f, 0.400000f, -0.538714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.681103f, 0.400000f, -0.613268f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.613268f, 0.400000f, -0.681103f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.538714f, 0.400000f, -0.741476f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.458258f, 0.400000f, -0.793725f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.372780f, 0.400000f, -0.837278f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.283219f, 0.400000f, -0.871658f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.190554f, 0.400000f, -0.896487f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.095802f, 0.400000f, -0.911494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, 0.400000f, -0.916515f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.095802f, 0.400000f, -0.911494f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.190554f, 0.400000f, -0.896487f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.283219f, 0.400000f, -0.871658f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.372780f, 0.400000f, -0.837278f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.458258f, 0.400000f, -0.793725f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.538714f, 0.400000f, -0.741476f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.613268f, 0.400000f, -0.681103f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.681103f, 0.400000f, -0.613268f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.741476f, 0.400000f, -0.538714f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.793725f, 0.400000f, -0.458258f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.837278f, 0.400000f, -0.372780f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.871658f, 0.400000f, -0.283219f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.896487f, 0.400000f, -0.190554f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.911494f, 0.400000f, -0.095802f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.866025f, 0.500000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.861281f, 0.500000f, 0.090524f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.847101f, 0.500000f, 0.180057f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.823639f, 0.500000f, 0.267617f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.791154f, 0.500000f, 0.352244f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.750000f, 0.500000f, 0.433013f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.700629f, 0.500000f, 0.509037f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.643582f, 0.500000f, 0.579484f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.579484f, 0.500000f, 0.643582f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.509037f, 0.500000f, 0.700629f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.433013f, 0.500000f, 0.750000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.352244f, 0.500000f, 0.791154f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.267617f, 0.500000f, 0.823639f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.180057f, 0.500000f, 0.847101f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.090524f, 0.500000f, 0.861281f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, 0.500000f, 0.866025f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.090524f, 0.500000f, 0.861281f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.180057f, 0.500000f, 0.847101f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.267617f, 0.500000f, 0.823639f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.352244f, 0.500000f, 0.791154f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.433013f, 0.500000f, 0.750000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.509037f, 0.500000f, 0.700629f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.579484f, 0.500000f, 0.643582f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.643582f, 0.500000f, 0.579484f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.700629f, 0.500000f, 0.509037f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.750000f, 0.500000f, 0.433013f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.791154f, 0.500000f, 0.352244f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.823639f, 0.500000f, 0.267617f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.847101f, 0.500000f, 0.180057f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.861281f, 0.500000f, 0.090524f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.866025f, 0.500000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.861281f, 0.500000f, -0.090524f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.847101f, 0.500000f, -0.180057f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.823639f, 0.500000f, -0.267617f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.791154f, 0.500000f, -0.352244f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.750000f, 0.500000f, -0.433013f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.700629f, 0.500000f, -0.509037f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.643582f, 0.500000f, -0.579484f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.579484f, 0.500000f, -0.643582f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.509037f, 0.500000f, -0.700629f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.433013f, 0.500000f, -0.750000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.352244f, 0.500000f, -0.791154f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.267617f, 0.500000f, -0.823639f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.180057f, 0.500000f, -0.847101f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.090524f, 0.500000f, -0.861281f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, 0.500000f, -0.866025f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.090524f, 0.500000f, -0.861281f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.180057f, 0.500000f, -0.847101f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.267617f, 0.500000f, -0.823639f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.352244f, 0.500000f, -0.791154f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.433013f, 0.500000f, -0.750000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.509037f, 0.500000f, -0.700629f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.579484f, 0.500000f, -0.643582f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.643582f, 0.500000f, -0.579484f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.700629f, 0.500000f, -0.509037f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.750000f, 0.500000f, -0.433013f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.791154f, 0.500000f, -0.352244f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.823639f, 0.500000f, -0.267617f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.847101f, 0.500000f, -0.180057f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.861281f, 0.500000f, -0.090524f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.800000f, 0.600000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.795618f, 0.600000f, 0.083623f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.782518f, 0.600000f, 0.166329f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.760845f, 0.600000f, 0.247214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.730836f, 0.600000f, 0.325389f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.692820f, 0.600000f, 0.400000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.647214f, 0.600000f, 0.470228f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.594516f, 0.600000f, 0.535304f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.535304f, 0.600000f, 0.594516f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.470228f, 0.600000f, 0.647214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.400000f, 0.600000f, 0.692820f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.325389f, 0.600000f, 0.730836f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.247214f, 0.600000f, 0.760845f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.166329f, 0.600000f, 0.782518f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.083623f, 0.600000f, 0.795618f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, 0.600000f, 0.800000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.083623f, 0.600000f, 0.795618f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.166329f, 0.600000f, 0.782518f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.247214f, 0.600000f, 0.760845f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.325389f, 0.600000f, 0.730836f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.400000f, 0.600000f, 0.692820f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.470228f, 0.600000f, 0.647214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.535304f, 0.600000f, 0.594516f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.594516f, 0.600000f, 0.535304f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.647214f, 0.600000f, 0.470228f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.692820f, 0.600000f, 0.400000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.730836f, 0.600000f, 0.325389f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.760845f, 0.600000f, 0.247214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.782518f, 0.600000f, 0.166329f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.795618f, 0.600000f, 0.083623f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.800000f, 0.600000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.795618f, 0.600000f, -0.083623f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.782518f, 0.600000f, -0.166329f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.760845f, 0.600000f, -0.247214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.730836f, 0.600000f, -0.325389f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.692820f, 0.600000f, -0.400000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.647214f, 0.600000f, -0.470228f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.594516f, 0.600000f, -0.535304f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.535304f, 0.600000f, -0.594516f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.470228f, 0.600000f, -0.647214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.400000f, 0.600000f, -0.692820f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.325389f, 0.600000f, -0.730836f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.247214f, 0.600000f, -0.760845f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.166329f, 0.600000f, -0.782518f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.083623f, 0.600000f, -0.795618f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, 0.600000f, -0.800000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.083623f, 0.600000f, -0.795618f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.166329f, 0.600000f, -0.782518f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.247214f, 0.600000f, -0.760845f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.325389f, 0.600000f, -0.730836f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.400000f, 0.600000f, -0.692820f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.470228f, 0.600000f, -0.647214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.535304f, 0.600000f, -0.594516f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.594516f, 0.600000f, -0.535304f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.647214f, 0.600000f, -0.470228f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.692820f, 0.600000f, -0.400000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.730836f, 0.600000f, -0.325389f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.760845f, 0.600000f, -0.247214f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.782518f, 0.600000f, -0.166329f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.795618f, 0.600000f, -0.083623f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.714143f, 0.700000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.710231f, 0.700000f, 0.074648f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.698537f, 0.700000f, 0.148479f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.679190f, 0.700000f, 0.220682f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.652402f, 0.700000f, 0.290468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.618466f, 0.700000f, 0.357071f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.577754f, 0.700000f, 0.419763f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.530712f, 0.700000f, 0.477855f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.477855f, 0.700000f, 0.530712f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.419763f, 0.700000f, 0.577754f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.357071f, 0.700000f, 0.618466f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.290468f, 0.700000f, 0.652402f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.220682f, 0.700000f, 0.679190f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.148479f, 0.700000f, 0.698537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.074648f, 0.700000f, 0.710231f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, 0.700000f, 0.714143f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.074648f, 0.700000f, 0.710231f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.148479f, 0.700000f, 0.698537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.220682f, 0.700000f, 0.679190f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.290468f, 0.700000f, 0.652402f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.357071f, 0.700000f, 0.618466f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.419763f, 0.700000f, 0.577754f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.477855f, 0.700000f, 0.530712f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.530712f, 0.700000f, 0.477855f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.577754f, 0.700000f, 0.419763f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.618466f, 0.700000f, 0.357071f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.652402f, 0.700000f, 0.290468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.679190f, 0.700000f, 0.220682f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.698537f, 0.700000f, 0.148479f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.710231f, 0.700000f, 0.074648f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.714143f, 0.700000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.710231f, 0.700000f, -0.074648f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.698537f, 0.700000f, -0.148479f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.679190f, 0.700000f, -0.220682f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.652402f, 0.700000f, -0.290468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.618466f, 0.700000f, -0.357071f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.577754f, 0.700000f, -0.419763f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.530712f, 0.700000f, -0.477855f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.477855f, 0.700000f, -0.530712f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.419763f, 0.700000f, -0.577754f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.357071f, 0.700000f, -0.618466f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.290468f, 0.700000f, -0.652402f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.220682f, 0.700000f, -0.679190f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.148479f, 0.700000f, -0.698537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.074648f, 0.700000f, -0.710231f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, 0.700000f, -0.714143f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.074648f, 0.700000f, -0.710231f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.148479f, 0.700000f, -0.698537f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.220682f, 0.700000f, -0.679190f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.290468f, 0.700000f, -0.652402f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.357071f, 0.700000f, -0.618466f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.419763f, 0.700000f, -0.577754f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.477855f, 0.700000f, -0.530712f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.530712f, 0.700000f, -0.477855f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.577754f, 0.700000f, -0.419763f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.618466f, 0.700000f, -0.357071f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.652402f, 0.700000f, -0.290468f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.679190f, 0.700000f, -0.220682f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.698537f, 0.700000f, -0.148479f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.710231f, 0.700000f, -0.074648f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.600000f, 0.800000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.596713f, 0.800000f, 0.062717f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.586889f, 0.800000f, 0.124747f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.570634f, 0.800000f, 0.185410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.548127f, 0.800000f, 0.244042f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.519615f, 0.800000f, 0.300000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.485410f, 0.800000f, 0.352671f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.445887f, 0.800000f, 0.401478f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.401478f, 0.800000f, 0.445887f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.352671f, 0.800000f, 0.485410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.300000f, 0.800000f, 0.519615f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.244042f, 0.800000f, 0.548127f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.185410f, 0.800000f, 0.570634f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.124747f, 0.800000f, 0.586889f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.062717f, 0.800000f, 0.596713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, 0.800000f, 0.600000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.062717f, 0.800000f, 0.596713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.124747f, 0.800000f, 0.586889f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.185410f, 0.800000f, 0.570634f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.244042f, 0.800000f, 0.548127f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.300000f, 0.800000f, 0.519615f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.352671f, 0.800000f, 0.485410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.401478f, 0.800000f, 0.445887f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.445887f, 0.800000f, 0.401478f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.485410f, 0.800000f, 0.352671f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.519615f, 0.800000f, 0.300000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.548127f, 0.800000f, 0.244042f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.570634f, 0.800000f, 0.185410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.586889f, 0.800000f, 0.124747f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.596713f, 0.800000f, 0.062717f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.600000f, 0.800000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.596713f, 0.800000f, -0.062717f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.586889f, 0.800000f, -0.124747f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.570634f, 0.800000f, -0.185410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.548127f, 0.800000f, -0.244042f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.519615f, 0.800000f, -0.300000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.485410f, 0.800000f, -0.352671f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.445887f, 0.800000f, -0.401478f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.401478f, 0.800000f, -0.445887f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.352671f, 0.800000f, -0.485410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.300000f, 0.800000f, -0.519615f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.244042f, 0.800000f, -0.548127f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.185410f, 0.800000f, -0.570634f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.124747f, 0.800000f, -0.586889f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.062717f, 0.800000f, -0.596713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, 0.800000f, -0.600000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.062717f, 0.800000f, -0.596713f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.124747f, 0.800000f, -0.586889f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.185410f, 0.800000f, -0.570634f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.244042f, 0.800000f, -0.548127f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.300000f, 0.800000f, -0.519615f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.352671f, 0.800000f, -0.485410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.401478f, 0.800000f, -0.445887f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.445887f, 0.800000f, -0.401478f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.485410f, 0.800000f, -0.352671f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.519615f, 0.800000f, -0.300000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.548127f, 0.800000f, -0.244042f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.570634f, 0.800000f, -0.185410f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.586889f, 0.800000f, -0.124747f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.596713f, 0.800000f, -0.062717f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.435890f, 0.900000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.433502f, 0.900000f, 0.045563f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.426365f, 0.900000f, 0.090627f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.414556f, 0.900000f, 0.134697f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.398205f, 0.900000f, 0.177292f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.377492f, 0.900000f, 0.217945f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.352642f, 0.900000f, 0.256210f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.323929f, 0.900000f, 0.291667f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.291667f, 0.900000f, 0.323929f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.256210f, 0.900000f, 0.352642f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.217945f, 0.900000f, 0.377492f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.177292f, 0.900000f, 0.398205f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.134697f, 0.900000f, 0.414556f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.090627f, 0.900000f, 0.426365f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.045563f, 0.900000f, 0.433502f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.000000f, 0.900000f, 0.435890f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.045563f, 0.900000f, 0.433502f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.090627f, 0.900000f, 0.426365f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.134697f, 0.900000f, 0.414556f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.177292f, 0.900000f, 0.398205f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.217945f, 0.900000f, 0.377492f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.256210f, 0.900000f, 0.352642f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.291667f, 0.900000f, 0.323929f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.323929f, 0.900000f, 0.291667f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.352642f, 0.900000f, 0.256210f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.377492f, 0.900000f, 0.217945f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.398205f, 0.900000f, 0.177292f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.414556f, 0.900000f, 0.134697f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.426365f, 0.900000f, 0.090627f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.433502f, 0.900000f, 0.045563f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.435890f, 0.900000f, -0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.433502f, 0.900000f, -0.045563f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.426365f, 0.900000f, -0.090627f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.414556f, 0.900000f, -0.134697f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.398205f, 0.900000f, -0.177292f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.377492f, 0.900000f, -0.217945f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.352642f, 0.900000f, -0.256210f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.323929f, 0.900000f, -0.291667f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.291667f, 0.900000f, -0.323929f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.256210f, 0.900000f, -0.352642f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.217945f, 0.900000f, -0.377492f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.177292f, 0.900000f, -0.398205f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.134697f, 0.900000f, -0.414556f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.090627f, 0.900000f, -0.426365f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(-0.045563f, 0.900000f, -0.433502f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.000000f, 0.900000f, -0.435890f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.045563f, 0.900000f, -0.433502f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.090627f, 0.900000f, -0.426365f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.134697f, 0.900000f, -0.414556f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.177292f, 0.900000f, -0.398205f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.217945f, 0.900000f, -0.377492f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.256210f, 0.900000f, -0.352642f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.291667f, 0.900000f, -0.323929f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.323929f, 0.900000f, -0.291667f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.352642f, 0.900000f, -0.256210f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.377492f, 0.900000f, -0.217945f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.398205f, 0.900000f, -0.177292f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.414556f, 0.900000f, -0.134697f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.426365f, 0.900000f, -0.090627f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },
		{ XMFLOAT3(0.433502f, 0.900000f, -0.045563f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		{ XMFLOAT3(0.000000f, 1.000000f, 0.000000f), XMFLOAT3(1.000000f, 1.000000f, 1.000000f) },

		};
		
		D3D11_SUBRESOURCE_DATA vertexBufferData = { 0 };
		vertexBufferData.pSysMem = SphereVertices;
		vertexBufferData.SysMemPitch = 0;
		vertexBufferData.SysMemSlicePitch = 0;
		CD3D11_BUFFER_DESC vertexBufferDesc(sizeof(SphereVertices), D3D11_BIND_VERTEX_BUFFER);
		DX::ThrowIfFailed(
			m_deviceResources->GetD3DDevice()->CreateBuffer(
				&vertexBufferDesc,
				&vertexBufferData,
				&m_vertexBuffer
			)
		);

		// 加载网格索引。每三个索引表示
		// 要在屏幕上呈现的三角形。
		// 例如: 0,2,1 表示顶点的索引
		// 顶点缓冲区中的索引为 0、2 和 1 的顶点构成了
		// 此网格的第一个三角形。
		static const unsigned short SphereIndices[] =
		{
			0, 1, 2, 
			0, 2, 3, 
			0, 3, 4, 
			0, 4, 5, 
			0, 5, 6, 
			0, 6, 7, 
			0, 7, 8, 
			0, 8, 9, 
			0, 9, 10, 
			0, 10, 11, 
			0, 11, 12, 
			0, 12, 13, 
			0, 13, 14, 
			0, 14, 15, 
			0, 15, 16, 
			0, 16, 17, 
			0, 17, 18, 
			0, 18, 19, 
			0, 19, 20, 
			0, 20, 21, 
			0, 21, 22, 
			0, 22, 23, 
			0, 23, 24, 
			0, 24, 25, 
			0, 25, 26, 
			0, 26, 27, 
			0, 27, 28, 
			0, 28, 29, 
			0, 29, 30, 
			0, 30, 31, 
			0, 31, 32, 
			0, 32, 33, 
			0, 33, 34, 
			0, 34, 35, 
			0, 35, 36, 
			0, 36, 37, 
			0, 37, 38, 
			0, 38, 39, 
			0, 39, 40, 
			0, 40, 41, 
			0, 41, 42, 
			0, 42, 43, 
			0, 43, 44, 
			0, 44, 45, 
			0, 45, 46, 
			0, 46, 47, 
			0, 47, 48, 
			0, 48, 49, 
			0, 49, 50, 
			0, 50, 51, 
			0, 51, 52, 
			0, 52, 53, 
			0, 53, 54, 
			0, 54, 55, 
			0, 55, 56, 
			0, 56, 57, 
			0, 57, 58, 
			0, 58, 59, 
			0, 59, 60, 
			0, 60, 1, 

			1, 2, 61, 
			2, 62, 61, 
			2, 3, 62, 
			3, 63, 62, 
			3, 4, 63, 
			4, 64, 63, 
			4, 5, 64, 
			5, 65, 64, 
			5, 6, 65, 
			6, 66, 65, 
			6, 7, 66, 
			7, 67, 66, 
			7, 8, 67, 
			8, 68, 67, 
			8, 9, 68, 
			9, 69, 68, 
			9, 10, 69, 
			10, 70, 69, 
			10, 11, 70, 
			11, 71, 70, 
			11, 12, 71, 
			12, 72, 71, 
			12, 13, 72, 
			13, 73, 72, 
			13, 14, 73, 
			14, 74, 73, 
			14, 15, 74, 
			15, 75, 74, 
			15, 16, 75, 
			16, 76, 75, 
			16, 17, 76, 
			17, 77, 76, 
			17, 18, 77, 
			18, 78, 77, 
			18, 19, 78, 
			19, 79, 78, 
			19, 20, 79, 
			20, 80, 79, 
			20, 21, 80, 
			21, 81, 80, 
			21, 22, 81, 
			22, 82, 81, 
			22, 23, 82, 
			23, 83, 82, 
			23, 24, 83, 
			24, 84, 83, 
			24, 25, 84, 
			25, 85, 84, 
			25, 26, 85, 
			26, 86, 85, 
			26, 27, 86, 
			27, 87, 86, 
			27, 28, 87, 
			28, 88, 87, 
			28, 29, 88, 
			29, 89, 88, 
			29, 30, 89, 
			30, 90, 89, 
			30, 31, 90, 
			31, 91, 90, 
			31, 32, 91, 
			32, 92, 91, 
			32, 33, 92, 
			33, 93, 92, 
			33, 34, 93, 
			34, 94, 93, 
			34, 35, 94, 
			35, 95, 94, 
			35, 36, 95, 
			36, 96, 95, 
			36, 37, 96, 
			37, 97, 96, 
			37, 38, 97, 
			38, 98, 97, 
			38, 39, 98, 
			39, 99, 98, 
			39, 40, 99, 
			40, 100, 99, 
			40, 41, 100, 
			41, 101, 100, 
			41, 42, 101, 
			42, 102, 101, 
			42, 43, 102, 
			43, 103, 102, 
			43, 44, 103, 
			44, 104, 103, 
			44, 45, 104, 
			45, 105, 104, 
			45, 46, 105, 
			46, 106, 105, 
			46, 47, 106, 
			47, 107, 106, 
			47, 48, 107, 
			48, 108, 107, 
			48, 49, 108, 
			49, 109, 108, 
			49, 50, 109, 
			50, 110, 109, 
			50, 51, 110, 
			51, 111, 110, 
			51, 52, 111, 
			52, 112, 111, 
			52, 53, 112, 
			53, 113, 112, 
			53, 54, 113, 
			54, 114, 113, 
			54, 55, 114, 
			55, 115, 114, 
			55, 56, 115, 
			56, 116, 115, 
			56, 57, 116, 
			57, 117, 116, 
			57, 58, 117, 
			58, 118, 117, 
			58, 59, 118, 
			59, 119, 118, 
			59, 60, 119, 
			60, 120, 119, 
			60, 1, 120, 
			1, 61, 120, 
			61, 62, 121, 
			62, 122, 121, 
			62, 63, 122, 
			63, 123, 122, 
			63, 64, 123, 
			64, 124, 123, 
			64, 65, 124, 
			65, 125, 124, 
			65, 66, 125, 
			66, 126, 125, 
			66, 67, 126, 
			67, 127, 126, 
			67, 68, 127, 
			68, 128, 127, 
			68, 69, 128, 
			69, 129, 128, 
			69, 70, 129, 
			70, 130, 129, 
			70, 71, 130, 
			71, 131, 130, 
			71, 72, 131, 
			72, 132, 131, 
			72, 73, 132, 
			73, 133, 132, 
			73, 74, 133, 
			74, 134, 133, 
			74, 75, 134, 
			75, 135, 134, 
			75, 76, 135, 
			76, 136, 135, 
			76, 77, 136, 
			77, 137, 136, 
			77, 78, 137, 
			78, 138, 137, 
			78, 79, 138, 
			79, 139, 138, 
			79, 80, 139, 
			80, 140, 139, 
			80, 81, 140, 
			81, 141, 140, 
			81, 82, 141, 
			82, 142, 141, 
			82, 83, 142, 
			83, 143, 142, 
			83, 84, 143, 
			84, 144, 143, 
			84, 85, 144, 
			85, 145, 144, 
			85, 86, 145, 
			86, 146, 145, 
			86, 87, 146, 
			87, 147, 146, 
			87, 88, 147, 
			88, 148, 147, 
			88, 89, 148, 
			89, 149, 148, 
			89, 90, 149, 
			90, 150, 149, 
			90, 91, 150, 
			91, 151, 150, 
			91, 92, 151, 
			92, 152, 151, 
			92, 93, 152, 
			93, 153, 152, 
			93, 94, 153, 
			94, 154, 153, 
			94, 95, 154, 
			95, 155, 154, 
			95, 96, 155, 
			96, 156, 155, 
			96, 97, 156, 
			97, 157, 156, 
			97, 98, 157, 
			98, 158, 157, 
			98, 99, 158, 
			99, 159, 158, 
			99, 100, 159, 
			100, 160, 159, 
			100, 101, 160, 
			101, 161, 160, 
			101, 102, 161, 
			102, 162, 161, 
			102, 103, 162, 
			103, 163, 162, 
			103, 104, 163, 
			104, 164, 163, 
			104, 105, 164, 
			105, 165, 164, 
			105, 106, 165, 
			106, 166, 165, 
			106, 107, 166, 
			107, 167, 166, 
			107, 108, 167, 
			108, 168, 167, 
			108, 109, 168, 
			109, 169, 168, 
			109, 110, 169, 
			110, 170, 169, 
			110, 111, 170, 
			111, 171, 170, 
			111, 112, 171, 
			112, 172, 171, 
			112, 113, 172, 
			113, 173, 172, 
			113, 114, 173, 
			114, 174, 173, 
			114, 115, 174, 
			115, 175, 174, 
			115, 116, 175, 
			116, 176, 175, 
			116, 117, 176, 
			117, 177, 176, 
			117, 118, 177, 
			118, 178, 177, 
			118, 119, 178, 
			119, 179, 178, 
			119, 120, 179, 
			120, 180, 179, 
			120, 61, 180, 
			61, 121, 180, 
			121, 122, 181, 
			122, 182, 181, 
			122, 123, 182, 
			123, 183, 182, 
			123, 124, 183, 
			124, 184, 183, 
			124, 125, 184, 
			125, 185, 184, 
			125, 126, 185, 
			126, 186, 185, 
			126, 127, 186, 
			127, 187, 186, 
			127, 128, 187, 
			128, 188, 187, 
			128, 129, 188, 
			129, 189, 188, 
			129, 130, 189, 
			130, 190, 189, 
			130, 131, 190, 
			131, 191, 190, 
			131, 132, 191, 
			132, 192, 191, 
			132, 133, 192, 
			133, 193, 192, 
			133, 134, 193, 
			134, 194, 193, 
			134, 135, 194, 
			135, 195, 194, 
			135, 136, 195, 
			136, 196, 195, 
			136, 137, 196, 
			137, 197, 196, 
			137, 138, 197, 
			138, 198, 197, 
			138, 139, 198, 
			139, 199, 198, 
			139, 140, 199, 
			140, 200, 199, 
			140, 141, 200, 
			141, 201, 200, 
			141, 142, 201, 
			142, 202, 201, 
			142, 143, 202, 
			143, 203, 202, 
			143, 144, 203, 
			144, 204, 203, 
			144, 145, 204, 
			145, 205, 204, 
			145, 146, 205, 
			146, 206, 205, 
			146, 147, 206, 
			147, 207, 206, 
			147, 148, 207, 
			148, 208, 207, 
			148, 149, 208, 
			149, 209, 208, 
			149, 150, 209, 
			150, 210, 209, 
			150, 151, 210, 
			151, 211, 210, 
			151, 152, 211, 
			152, 212, 211, 
			152, 153, 212, 
			153, 213, 212, 
			153, 154, 213, 
			154, 214, 213, 
			154, 155, 214, 
			155, 215, 214, 
			155, 156, 215, 
			156, 216, 215, 
			156, 157, 216, 
			157, 217, 216, 
			157, 158, 217, 
			158, 218, 217, 
			158, 159, 218, 
			159, 219, 218, 
			159, 160, 219, 
			160, 220, 219, 
			160, 161, 220, 
			161, 221, 220, 
			161, 162, 221, 
			162, 222, 221, 
			162, 163, 222, 
			163, 223, 222, 
			163, 164, 223, 
			164, 224, 223, 
			164, 165, 224, 
			165, 225, 224, 
			165, 166, 225, 
			166, 226, 225, 
			166, 167, 226, 
			167, 227, 226, 
			167, 168, 227, 
			168, 228, 227, 
			168, 169, 228, 
			169, 229, 228, 
			169, 170, 229, 
			170, 230, 229, 
			170, 171, 230, 
			171, 231, 230, 
			171, 172, 231, 
			172, 232, 231, 
			172, 173, 232, 
			173, 233, 232, 
			173, 174, 233, 
			174, 234, 233, 
			174, 175, 234, 
			175, 235, 234, 
			175, 176, 235, 
			176, 236, 235, 
			176, 177, 236, 
			177, 237, 236, 
			177, 178, 237, 
			178, 238, 237, 
			178, 179, 238, 
			179, 239, 238, 
			179, 180, 239, 
			180, 240, 239, 
			180, 121, 240, 
			121, 181, 240, 
			181, 182, 241, 
			182, 242, 241, 
			182, 183, 242, 
			183, 243, 242, 
			183, 184, 243, 
			184, 244, 243, 
			184, 185, 244, 
			185, 245, 244, 
			185, 186, 245, 
			186, 246, 245, 
			186, 187, 246, 
			187, 247, 246, 
			187, 188, 247, 
			188, 248, 247, 
			188, 189, 248, 
			189, 249, 248, 
			189, 190, 249, 
			190, 250, 249, 
			190, 191, 250, 
			191, 251, 250, 
			191, 192, 251, 
			192, 252, 251, 
			192, 193, 252, 
			193, 253, 252, 
			193, 194, 253, 
			194, 254, 253, 
			194, 195, 254, 
			195, 255, 254, 
			195, 196, 255, 
			196, 256, 255, 
			196, 197, 256, 
			197, 257, 256, 
			197, 198, 257, 
			198, 258, 257, 
			198, 199, 258, 
			199, 259, 258, 
			199, 200, 259, 
			200, 260, 259, 
			200, 201, 260, 
			201, 261, 260, 
			201, 202, 261, 
			202, 262, 261, 
			202, 203, 262, 
			203, 263, 262, 
			203, 204, 263, 
			204, 264, 263, 
			204, 205, 264, 
			205, 265, 264, 
			205, 206, 265, 
			206, 266, 265, 
			206, 207, 266, 
			207, 267, 266, 
			207, 208, 267, 
			208, 268, 267, 
			208, 209, 268, 
			209, 269, 268, 
			209, 210, 269, 
			210, 270, 269, 
			210, 211, 270, 
			211, 271, 270, 
			211, 212, 271, 
			212, 272, 271, 
			212, 213, 272, 
			213, 273, 272, 
			213, 214, 273, 
			214, 274, 273, 
			214, 215, 274, 
			215, 275, 274, 
			215, 216, 275, 
			216, 276, 275, 
			216, 217, 276, 
			217, 277, 276, 
			217, 218, 277, 
			218, 278, 277, 
			218, 219, 278, 
			219, 279, 278, 
			219, 220, 279, 
			220, 280, 279, 
			220, 221, 280, 
			221, 281, 280, 
			221, 222, 281, 
			222, 282, 281, 
			222, 223, 282, 
			223, 283, 282, 
			223, 224, 283, 
			224, 284, 283, 
			224, 225, 284, 
			225, 285, 284, 
			225, 226, 285, 
			226, 286, 285, 
			226, 227, 286, 
			227, 287, 286, 
			227, 228, 287, 
			228, 288, 287, 
			228, 229, 288, 
			229, 289, 288, 
			229, 230, 289, 
			230, 290, 289, 
			230, 231, 290, 
			231, 291, 290, 
			231, 232, 291, 
			232, 292, 291, 
			232, 233, 292, 
			233, 293, 292, 
			233, 234, 293, 
			234, 294, 293, 
			234, 235, 294, 
			235, 295, 294, 
			235, 236, 295, 
			236, 296, 295, 
			236, 237, 296, 
			237, 297, 296, 
			237, 238, 297, 
			238, 298, 297, 
			238, 239, 298, 
			239, 299, 298, 
			239, 240, 299, 
			240, 300, 299, 
			240, 181, 300, 
			181, 241, 300, 
			241, 242, 301, 
			242, 302, 301, 
			242, 243, 302, 
			243, 303, 302, 
			243, 244, 303, 
			244, 304, 303, 
			244, 245, 304, 
			245, 305, 304, 
			245, 246, 305, 
			246, 306, 305, 
			246, 247, 306, 
			247, 307, 306, 
			247, 248, 307, 
			248, 308, 307, 
			248, 249, 308, 
			249, 309, 308, 
			249, 250, 309, 
			250, 310, 309, 
			250, 251, 310, 
			251, 311, 310, 
			251, 252, 311, 
			252, 312, 311, 
			252, 253, 312, 
			253, 313, 312, 
			253, 254, 313, 
			254, 314, 313, 
			254, 255, 314, 
			255, 315, 314, 
			255, 256, 315, 
			256, 316, 315, 
			256, 257, 316, 
			257, 317, 316, 
			257, 258, 317, 
			258, 318, 317, 
			258, 259, 318, 
			259, 319, 318, 
			259, 260, 319, 
			260, 320, 319, 
			260, 261, 320, 
			261, 321, 320, 
			261, 262, 321, 
			262, 322, 321, 
			262, 263, 322, 
			263, 323, 322, 
			263, 264, 323, 
			264, 324, 323, 
			264, 265, 324, 
			265, 325, 324, 
			265, 266, 325, 
			266, 326, 325, 
			266, 267, 326, 
			267, 327, 326, 
			267, 268, 327, 
			268, 328, 327, 
			268, 269, 328, 
			269, 329, 328, 
			269, 270, 329, 
			270, 330, 329, 
			270, 271, 330, 
			271, 331, 330, 
			271, 272, 331, 
			272, 332, 331, 
			272, 273, 332, 
			273, 333, 332, 
			273, 274, 333, 
			274, 334, 333, 
			274, 275, 334, 
			275, 335, 334, 
			275, 276, 335, 
			276, 336, 335, 
			276, 277, 336, 
			277, 337, 336, 
			277, 278, 337, 
			278, 338, 337, 
			278, 279, 338, 
			279, 339, 338, 
			279, 280, 339, 
			280, 340, 339, 
			280, 281, 340, 
			281, 341, 340, 
			281, 282, 341, 
			282, 342, 341, 
			282, 283, 342, 
			283, 343, 342, 
			283, 284, 343, 
			284, 344, 343, 
			284, 285, 344, 
			285, 345, 344, 
			285, 286, 345, 
			286, 346, 345, 
			286, 287, 346, 
			287, 347, 346, 
			287, 288, 347, 
			288, 348, 347, 
			288, 289, 348, 
			289, 349, 348, 
			289, 290, 349, 
			290, 350, 349, 
			290, 291, 350, 
			291, 351, 350, 
			291, 292, 351, 
			292, 352, 351, 
			292, 293, 352, 
			293, 353, 352, 
			293, 294, 353, 
			294, 354, 353, 
			294, 295, 354, 
			295, 355, 354, 
			295, 296, 355, 
			296, 356, 355, 
			296, 297, 356, 
			297, 357, 356, 
			297, 298, 357, 
			298, 358, 357, 
			298, 299, 358, 
			299, 359, 358, 
			299, 300, 359, 
			300, 360, 359, 
			300, 241, 360, 
			241, 301, 360, 
			301, 302, 361, 
			302, 362, 361, 
			302, 303, 362, 
			303, 363, 362, 
			303, 304, 363, 
			304, 364, 363, 
			304, 305, 364, 
			305, 365, 364, 
			305, 306, 365, 
			306, 366, 365, 
			306, 307, 366, 
			307, 367, 366, 
			307, 308, 367, 
			308, 368, 367, 
			308, 309, 368, 
			309, 369, 368, 
			309, 310, 369, 
			310, 370, 369, 
			310, 311, 370, 
			311, 371, 370, 
			311, 312, 371, 
			312, 372, 371, 
			312, 313, 372, 
			313, 373, 372, 
			313, 314, 373, 
			314, 374, 373, 
			314, 315, 374, 
			315, 375, 374, 
			315, 316, 375, 
			316, 376, 375, 
			316, 317, 376, 
			317, 377, 376, 
			317, 318, 377, 
			318, 378, 377, 
			318, 319, 378, 
			319, 379, 378, 
			319, 320, 379, 
			320, 380, 379, 
			320, 321, 380, 
			321, 381, 380, 
			321, 322, 381, 
			322, 382, 381, 
			322, 323, 382, 
			323, 383, 382, 
			323, 324, 383, 
			324, 384, 383, 
			324, 325, 384, 
			325, 385, 384, 
			325, 326, 385, 
			326, 386, 385, 
			326, 327, 386, 
			327, 387, 386, 
			327, 328, 387, 
			328, 388, 387, 
			328, 329, 388, 
			329, 389, 388, 
			329, 330, 389, 
			330, 390, 389, 
			330, 331, 390, 
			331, 391, 390, 
			331, 332, 391, 
			332, 392, 391, 
			332, 333, 392, 
			333, 393, 392, 
			333, 334, 393, 
			334, 394, 393, 
			334, 335, 394, 
			335, 395, 394, 
			335, 336, 395, 
			336, 396, 395, 
			336, 337, 396, 
			337, 397, 396, 
			337, 338, 397, 
			338, 398, 397, 
			338, 339, 398, 
			339, 399, 398, 
			339, 340, 399, 
			340, 400, 399, 
			340, 341, 400, 
			341, 401, 400, 
			341, 342, 401, 
			342, 402, 401, 
			342, 343, 402, 
			343, 403, 402, 
			343, 344, 403, 
			344, 404, 403, 
			344, 345, 404, 
			345, 405, 404, 
			345, 346, 405, 
			346, 406, 405, 
			346, 347, 406, 
			347, 407, 406, 
			347, 348, 407, 
			348, 408, 407, 
			348, 349, 408, 
			349, 409, 408, 
			349, 350, 409, 
			350, 410, 409, 
			350, 351, 410, 
			351, 411, 410, 
			351, 352, 411, 
			352, 412, 411, 
			352, 353, 412, 
			353, 413, 412, 
			353, 354, 413, 
			354, 414, 413, 
			354, 355, 414, 
			355, 415, 414, 
			355, 356, 415, 
			356, 416, 415, 
			356, 357, 416, 
			357, 417, 416, 
			357, 358, 417, 
			358, 418, 417, 
			358, 359, 418, 
			359, 419, 418, 
			359, 360, 419, 
			360, 420, 419, 
			360, 301, 420, 
			301, 361, 420, 
			361, 362, 421, 
			362, 422, 421, 
			362, 363, 422, 
			363, 423, 422, 
			363, 364, 423, 
			364, 424, 423, 
			364, 365, 424, 
			365, 425, 424, 
			365, 366, 425, 
			366, 426, 425, 
			366, 367, 426, 
			367, 427, 426, 
			367, 368, 427, 
			368, 428, 427, 
			368, 369, 428, 
			369, 429, 428, 
			369, 370, 429, 
			370, 430, 429, 
			370, 371, 430, 
			371, 431, 430, 
			371, 372, 431, 
			372, 432, 431, 
			372, 373, 432, 
			373, 433, 432, 
			373, 374, 433, 
			374, 434, 433, 
			374, 375, 434, 
			375, 435, 434, 
			375, 376, 435, 
			376, 436, 435, 
			376, 377, 436, 
			377, 437, 436, 
			377, 378, 437, 
			378, 438, 437, 
			378, 379, 438, 
			379, 439, 438, 
			379, 380, 439, 
			380, 440, 439, 
			380, 381, 440, 
			381, 441, 440, 
			381, 382, 441, 
			382, 442, 441, 
			382, 383, 442, 
			383, 443, 442, 
			383, 384, 443, 
			384, 444, 443, 
			384, 385, 444, 
			385, 445, 444, 
			385, 386, 445, 
			386, 446, 445, 
			386, 387, 446, 
			387, 447, 446, 
			387, 388, 447, 
			388, 448, 447, 
			388, 389, 448, 
			389, 449, 448, 
			389, 390, 449, 
			390, 450, 449, 
			390, 391, 450, 
			391, 451, 450, 
			391, 392, 451, 
			392, 452, 451, 
			392, 393, 452, 
			393, 453, 452, 
			393, 394, 453, 
			394, 454, 453, 
			394, 395, 454, 
			395, 455, 454, 
			395, 396, 455, 
			396, 456, 455, 
			396, 397, 456, 
			397, 457, 456, 
			397, 398, 457, 
			398, 458, 457, 
			398, 399, 458, 
			399, 459, 458, 
			399, 400, 459, 
			400, 460, 459, 
			400, 401, 460, 
			401, 461, 460, 
			401, 402, 461, 
			402, 462, 461, 
			402, 403, 462, 
			403, 463, 462, 
			403, 404, 463, 
			404, 464, 463, 
			404, 405, 464, 
			405, 465, 464, 
			405, 406, 465, 
			406, 466, 465, 
			406, 407, 466, 
			407, 467, 466, 
			407, 408, 467, 
			408, 468, 467, 
			408, 409, 468, 
			409, 469, 468, 
			409, 410, 469, 
			410, 470, 469, 
			410, 411, 470, 
			411, 471, 470, 
			411, 412, 471, 
			412, 472, 471, 
			412, 413, 472, 
			413, 473, 472, 
			413, 414, 473, 
			414, 474, 473, 
			414, 415, 474, 
			415, 475, 474, 
			415, 416, 475, 
			416, 476, 475, 
			416, 417, 476, 
			417, 477, 476, 
			417, 418, 477, 
			418, 478, 477, 
			418, 419, 478, 
			419, 479, 478, 
			419, 420, 479, 
			420, 480, 479, 
			420, 361, 480, 
			361, 421, 480, 
			421, 422, 481, 
			422, 482, 481, 
			422, 423, 482, 
			423, 483, 482, 
			423, 424, 483, 
			424, 484, 483, 
			424, 425, 484, 
			425, 485, 484, 
			425, 426, 485, 
			426, 486, 485, 
			426, 427, 486, 
			427, 487, 486, 
			427, 428, 487, 
			428, 488, 487, 
			428, 429, 488, 
			429, 489, 488, 
			429, 430, 489, 
			430, 490, 489, 
			430, 431, 490, 
			431, 491, 490, 
			431, 432, 491, 
			432, 492, 491, 
			432, 433, 492, 
			433, 493, 492, 
			433, 434, 493, 
			434, 494, 493, 
			434, 435, 494, 
			435, 495, 494, 
			435, 436, 495, 
			436, 496, 495, 
			436, 437, 496, 
			437, 497, 496, 
			437, 438, 497, 
			438, 498, 497, 
			438, 439, 498, 
			439, 499, 498, 
			439, 440, 499, 
			440, 500, 499, 
			440, 441, 500, 
			441, 501, 500, 
			441, 442, 501, 
			442, 502, 501, 
			442, 443, 502, 
			443, 503, 502, 
			443, 444, 503, 
			444, 504, 503, 
			444, 445, 504, 
			445, 505, 504, 
			445, 446, 505, 
			446, 506, 505, 
			446, 447, 506, 
			447, 507, 506, 
			447, 448, 507, 
			448, 508, 507, 
			448, 449, 508, 
			449, 509, 508, 
			449, 450, 509, 
			450, 510, 509, 
			450, 451, 510, 
			451, 511, 510, 
			451, 452, 511, 
			452, 512, 511, 
			452, 453, 512, 
			453, 513, 512, 
			453, 454, 513, 
			454, 514, 513, 
			454, 455, 514, 
			455, 515, 514, 
			455, 456, 515, 
			456, 516, 515, 
			456, 457, 516, 
			457, 517, 516, 
			457, 458, 517, 
			458, 518, 517, 
			458, 459, 518, 
			459, 519, 518, 
			459, 460, 519, 
			460, 520, 519, 
			460, 461, 520, 
			461, 521, 520, 
			461, 462, 521, 
			462, 522, 521, 
			462, 463, 522, 
			463, 523, 522, 
			463, 464, 523, 
			464, 524, 523, 
			464, 465, 524, 
			465, 525, 524, 
			465, 466, 525, 
			466, 526, 525, 
			466, 467, 526, 
			467, 527, 526, 
			467, 468, 527, 
			468, 528, 527, 
			468, 469, 528, 
			469, 529, 528, 
			469, 470, 529, 
			470, 530, 529, 
			470, 471, 530, 
			471, 531, 530, 
			471, 472, 531, 
			472, 532, 531, 
			472, 473, 532, 
			473, 533, 532, 
			473, 474, 533, 
			474, 534, 533, 
			474, 475, 534, 
			475, 535, 534, 
			475, 476, 535, 
			476, 536, 535, 
			476, 477, 536, 
			477, 537, 536, 
			477, 478, 537, 
			478, 538, 537, 
			478, 479, 538, 
			479, 539, 538, 
			479, 480, 539, 
			480, 540, 539, 
			480, 421, 540, 
			421, 481, 540, 
			481, 482, 541, 
			482, 542, 541, 
			482, 483, 542, 
			483, 543, 542, 
			483, 484, 543, 
			484, 544, 543, 
			484, 485, 544, 
			485, 545, 544, 
			485, 486, 545, 
			486, 546, 545, 
			486, 487, 546, 
			487, 547, 546, 
			487, 488, 547, 
			488, 548, 547, 
			488, 489, 548, 
			489, 549, 548, 
			489, 490, 549, 
			490, 550, 549, 
			490, 491, 550, 
			491, 551, 550, 
			491, 492, 551, 
			492, 552, 551, 
			492, 493, 552, 
			493, 553, 552, 
			493, 494, 553, 
			494, 554, 553, 
			494, 495, 554, 
			495, 555, 554, 
			495, 496, 555, 
			496, 556, 555, 
			496, 497, 556, 
			497, 557, 556, 
			497, 498, 557, 
			498, 558, 557, 
			498, 499, 558, 
			499, 559, 558, 
			499, 500, 559, 
			500, 560, 559, 
			500, 501, 560, 
			501, 561, 560, 
			501, 502, 561, 
			502, 562, 561, 
			502, 503, 562, 
			503, 563, 562, 
			503, 504, 563, 
			504, 564, 563, 
			504, 505, 564, 
			505, 565, 564, 
			505, 506, 565, 
			506, 566, 565, 
			506, 507, 566, 
			507, 567, 566, 
			507, 508, 567, 
			508, 568, 567, 
			508, 509, 568, 
			509, 569, 568, 
			509, 510, 569, 
			510, 570, 569, 
			510, 511, 570, 
			511, 571, 570, 
			511, 512, 571, 
			512, 572, 571, 
			512, 513, 572, 
			513, 573, 572, 
			513, 514, 573, 
			514, 574, 573, 
			514, 515, 574, 
			515, 575, 574, 
			515, 516, 575, 
			516, 576, 575, 
			516, 517, 576, 
			517, 577, 576, 
			517, 518, 577, 
			518, 578, 577, 
			518, 519, 578, 
			519, 579, 578, 
			519, 520, 579, 
			520, 580, 579, 
			520, 521, 580, 
			521, 581, 580, 
			521, 522, 581, 
			522, 582, 581, 
			522, 523, 582, 
			523, 583, 582, 
			523, 524, 583, 
			524, 584, 583, 
			524, 525, 584, 
			525, 585, 584, 
			525, 526, 585, 
			526, 586, 585, 
			526, 527, 586, 
			527, 587, 586, 
			527, 528, 587, 
			528, 588, 587, 
			528, 529, 588, 
			529, 589, 588, 
			529, 530, 589, 
			530, 590, 589, 
			530, 531, 590, 
			531, 591, 590, 
			531, 532, 591, 
			532, 592, 591, 
			532, 533, 592, 
			533, 593, 592, 
			533, 534, 593, 
			534, 594, 593, 
			534, 535, 594, 
			535, 595, 594, 
			535, 536, 595, 
			536, 596, 595, 
			536, 537, 596, 
			537, 597, 596, 
			537, 538, 597, 
			538, 598, 597, 
			538, 539, 598, 
			539, 599, 598, 
			539, 540, 599, 
			540, 600, 599, 
			540, 481, 600, 
			481, 541, 600, 
			541, 542, 601, 
			542, 602, 601, 
			542, 543, 602, 
			543, 603, 602, 
			543, 544, 603, 
			544, 604, 603, 
			544, 545, 604, 
			545, 605, 604, 
			545, 546, 605, 
			546, 606, 605, 
			546, 547, 606, 
			547, 607, 606, 
			547, 548, 607, 
			548, 608, 607, 
			548, 549, 608, 
			549, 609, 608, 
			549, 550, 609, 
			550, 610, 609, 
			550, 551, 610, 
			551, 611, 610, 
			551, 552, 611, 
			552, 612, 611, 
			552, 553, 612, 
			553, 613, 612, 
			553, 554, 613, 
			554, 614, 613, 
			554, 555, 614, 
			555, 615, 614, 
			555, 556, 615, 
			556, 616, 615, 
			556, 557, 616, 
			557, 617, 616, 
			557, 558, 617, 
			558, 618, 617, 
			558, 559, 618, 
			559, 619, 618, 
			559, 560, 619, 
			560, 620, 619, 
			560, 561, 620, 
			561, 621, 620, 
			561, 562, 621, 
			562, 622, 621, 
			562, 563, 622, 
			563, 623, 622, 
			563, 564, 623, 
			564, 624, 623, 
			564, 565, 624, 
			565, 625, 624, 
			565, 566, 625, 
			566, 626, 625, 
			566, 567, 626, 
			567, 627, 626, 
			567, 568, 627, 
			568, 628, 627, 
			568, 569, 628, 
			569, 629, 628, 
			569, 570, 629, 
			570, 630, 629, 
			570, 571, 630, 
			571, 631, 630, 
			571, 572, 631, 
			572, 632, 631, 
			572, 573, 632, 
			573, 633, 632, 
			573, 574, 633, 
			574, 634, 633, 
			574, 575, 634, 
			575, 635, 634, 
			575, 576, 635, 
			576, 636, 635, 
			576, 577, 636, 
			577, 637, 636, 
			577, 578, 637, 
			578, 638, 637, 
			578, 579, 638, 
			579, 639, 638, 
			579, 580, 639, 
			580, 640, 639, 
			580, 581, 640, 
			581, 641, 640, 
			581, 582, 641, 
			582, 642, 641, 
			582, 583, 642, 
			583, 643, 642, 
			583, 584, 643, 
			584, 644, 643, 
			584, 585, 644, 
			585, 645, 644, 
			585, 586, 645, 
			586, 646, 645, 
			586, 587, 646, 
			587, 647, 646, 
			587, 588, 647, 
			588, 648, 647, 
			588, 589, 648, 
			589, 649, 648, 
			589, 590, 649, 
			590, 650, 649, 
			590, 591, 650, 
			591, 651, 650, 
			591, 592, 651, 
			592, 652, 651, 
			592, 593, 652, 
			593, 653, 652, 
			593, 594, 653, 
			594, 654, 653, 
			594, 595, 654, 
			595, 655, 654, 
			595, 596, 655, 
			596, 656, 655, 
			596, 597, 656, 
			597, 657, 656, 
			597, 598, 657, 
			598, 658, 657, 
			598, 599, 658, 
			599, 659, 658, 
			599, 600, 659, 
			600, 660, 659, 
			600, 541, 660, 
			541, 601, 660, 
			601, 602, 661, 
			602, 662, 661, 
			602, 603, 662, 
			603, 663, 662, 
			603, 604, 663, 
			604, 664, 663, 
			604, 605, 664, 
			605, 665, 664, 
			605, 606, 665, 
			606, 666, 665, 
			606, 607, 666, 
			607, 667, 666, 
			607, 608, 667, 
			608, 668, 667, 
			608, 609, 668, 
			609, 669, 668, 
			609, 610, 669, 
			610, 670, 669, 
			610, 611, 670, 
			611, 671, 670, 
			611, 612, 671, 
			612, 672, 671, 
			612, 613, 672, 
			613, 673, 672, 
			613, 614, 673, 
			614, 674, 673, 
			614, 615, 674, 
			615, 675, 674, 
			615, 616, 675, 
			616, 676, 675, 
			616, 617, 676, 
			617, 677, 676, 
			617, 618, 677, 
			618, 678, 677, 
			618, 619, 678, 
			619, 679, 678, 
			619, 620, 679, 
			620, 680, 679, 
			620, 621, 680, 
			621, 681, 680, 
			621, 622, 681, 
			622, 682, 681, 
			622, 623, 682, 
			623, 683, 682, 
			623, 624, 683, 
			624, 684, 683, 
			624, 625, 684, 
			625, 685, 684, 
			625, 626, 685, 
			626, 686, 685, 
			626, 627, 686, 
			627, 687, 686, 
			627, 628, 687, 
			628, 688, 687, 
			628, 629, 688, 
			629, 689, 688, 
			629, 630, 689, 
			630, 690, 689, 
			630, 631, 690, 
			631, 691, 690, 
			631, 632, 691, 
			632, 692, 691, 
			632, 633, 692, 
			633, 693, 692, 
			633, 634, 693, 
			634, 694, 693, 
			634, 635, 694, 
			635, 695, 694, 
			635, 636, 695, 
			636, 696, 695, 
			636, 637, 696, 
			637, 697, 696, 
			637, 638, 697, 
			638, 698, 697, 
			638, 639, 698, 
			639, 699, 698, 
			639, 640, 699, 
			640, 700, 699, 
			640, 641, 700, 
			641, 701, 700, 
			641, 642, 701, 
			642, 702, 701, 
			642, 643, 702, 
			643, 703, 702, 
			643, 644, 703, 
			644, 704, 703, 
			644, 645, 704, 
			645, 705, 704, 
			645, 646, 705, 
			646, 706, 705, 
			646, 647, 706, 
			647, 707, 706, 
			647, 648, 707, 
			648, 708, 707, 
			648, 649, 708, 
			649, 709, 708, 
			649, 650, 709, 
			650, 710, 709, 
			650, 651, 710, 
			651, 711, 710, 
			651, 652, 711, 
			652, 712, 711, 
			652, 653, 712, 
			653, 713, 712, 
			653, 654, 713, 
			654, 714, 713, 
			654, 655, 714, 
			655, 715, 714, 
			655, 656, 715, 
			656, 716, 715, 
			656, 657, 716, 
			657, 717, 716, 
			657, 658, 717, 
			658, 718, 717, 
			658, 659, 718, 
			659, 719, 718, 
			659, 660, 719, 
			660, 720, 719, 
			660, 601, 720, 
			601, 661, 720, 
			661, 662, 721, 
			662, 722, 721, 
			662, 663, 722, 
			663, 723, 722, 
			663, 664, 723, 
			664, 724, 723, 
			664, 665, 724, 
			665, 725, 724, 
			665, 666, 725, 
			666, 726, 725, 
			666, 667, 726, 
			667, 727, 726, 
			667, 668, 727, 
			668, 728, 727, 
			668, 669, 728, 
			669, 729, 728, 
			669, 670, 729, 
			670, 730, 729, 
			670, 671, 730, 
			671, 731, 730, 
			671, 672, 731, 
			672, 732, 731, 
			672, 673, 732, 
			673, 733, 732, 
			673, 674, 733, 
			674, 734, 733, 
			674, 675, 734, 
			675, 735, 734, 
			675, 676, 735, 
			676, 736, 735, 
			676, 677, 736, 
			677, 737, 736, 
			677, 678, 737, 
			678, 738, 737, 
			678, 679, 738, 
			679, 739, 738, 
			679, 680, 739, 
			680, 740, 739, 
			680, 681, 740, 
			681, 741, 740, 
			681, 682, 741, 
			682, 742, 741, 
			682, 683, 742, 
			683, 743, 742, 
			683, 684, 743, 
			684, 744, 743, 
			684, 685, 744, 
			685, 745, 744, 
			685, 686, 745, 
			686, 746, 745, 
			686, 687, 746, 
			687, 747, 746, 
			687, 688, 747, 
			688, 748, 747, 
			688, 689, 748, 
			689, 749, 748, 
			689, 690, 749, 
			690, 750, 749, 
			690, 691, 750, 
			691, 751, 750, 
			691, 692, 751, 
			692, 752, 751, 
			692, 693, 752, 
			693, 753, 752, 
			693, 694, 753, 
			694, 754, 753, 
			694, 695, 754, 
			695, 755, 754, 
			695, 696, 755, 
			696, 756, 755, 
			696, 697, 756, 
			697, 757, 756, 
			697, 698, 757, 
			698, 758, 757, 
			698, 699, 758, 
			699, 759, 758, 
			699, 700, 759, 
			700, 760, 759, 
			700, 701, 760, 
			701, 761, 760, 
			701, 702, 761, 
			702, 762, 761, 
			702, 703, 762, 
			703, 763, 762, 
			703, 704, 763, 
			704, 764, 763, 
			704, 705, 764, 
			705, 765, 764, 
			705, 706, 765, 
			706, 766, 765, 
			706, 707, 766, 
			707, 767, 766, 
			707, 708, 767, 
			708, 768, 767, 
			708, 709, 768, 
			709, 769, 768, 
			709, 710, 769, 
			710, 770, 769, 
			710, 711, 770, 
			711, 771, 770, 
			711, 712, 771, 
			712, 772, 771, 
			712, 713, 772, 
			713, 773, 772, 
			713, 714, 773, 
			714, 774, 773, 
			714, 715, 774, 
			715, 775, 774, 
			715, 716, 775, 
			716, 776, 775, 
			716, 717, 776, 
			717, 777, 776, 
			717, 718, 777, 
			718, 778, 777, 
			718, 719, 778, 
			719, 779, 778, 
			719, 720, 779, 
			720, 780, 779, 
			720, 661, 780, 
			661, 721, 780, 
			721, 722, 781, 
			722, 782, 781, 
			722, 723, 782, 
			723, 783, 782, 
			723, 724, 783, 
			724, 784, 783, 
			724, 725, 784, 
			725, 785, 784, 
			725, 726, 785, 
			726, 786, 785, 
			726, 727, 786, 
			727, 787, 786, 
			727, 728, 787, 
			728, 788, 787, 
			728, 729, 788, 
			729, 789, 788, 
			729, 730, 789, 
			730, 790, 789, 
			730, 731, 790, 
			731, 791, 790, 
			731, 732, 791, 
			732, 792, 791, 
			732, 733, 792, 
			733, 793, 792, 
			733, 734, 793, 
			734, 794, 793, 
			734, 735, 794, 
			735, 795, 794, 
			735, 736, 795, 
			736, 796, 795, 
			736, 737, 796, 
			737, 797, 796, 
			737, 738, 797, 
			738, 798, 797, 
			738, 739, 798, 
			739, 799, 798, 
			739, 740, 799, 
			740, 800, 799, 
			740, 741, 800, 
			741, 801, 800, 
			741, 742, 801, 
			742, 802, 801, 
			742, 743, 802, 
			743, 803, 802, 
			743, 744, 803, 
			744, 804, 803, 
			744, 745, 804, 
			745, 805, 804, 
			745, 746, 805, 
			746, 806, 805, 
			746, 747, 806, 
			747, 807, 806, 
			747, 748, 807, 
			748, 808, 807, 
			748, 749, 808, 
			749, 809, 808, 
			749, 750, 809, 
			750, 810, 809, 
			750, 751, 810, 
			751, 811, 810, 
			751, 752, 811, 
			752, 812, 811, 
			752, 753, 812, 
			753, 813, 812, 
			753, 754, 813, 
			754, 814, 813, 
			754, 755, 814, 
			755, 815, 814, 
			755, 756, 815, 
			756, 816, 815, 
			756, 757, 816, 
			757, 817, 816, 
			757, 758, 817, 
			758, 818, 817, 
			758, 759, 818, 
			759, 819, 818, 
			759, 760, 819, 
			760, 820, 819, 
			760, 761, 820, 
			761, 821, 820, 
			761, 762, 821, 
			762, 822, 821, 
			762, 763, 822, 
			763, 823, 822, 
			763, 764, 823, 
			764, 824, 823, 
			764, 765, 824, 
			765, 825, 824, 
			765, 766, 825, 
			766, 826, 825, 
			766, 767, 826, 
			767, 827, 826, 
			767, 768, 827, 
			768, 828, 827, 
			768, 769, 828, 
			769, 829, 828, 
			769, 770, 829, 
			770, 830, 829, 
			770, 771, 830, 
			771, 831, 830, 
			771, 772, 831, 
			772, 832, 831, 
			772, 773, 832, 
			773, 833, 832, 
			773, 774, 833, 
			774, 834, 833, 
			774, 775, 834, 
			775, 835, 834, 
			775, 776, 835, 
			776, 836, 835, 
			776, 777, 836, 
			777, 837, 836, 
			777, 778, 837, 
			778, 838, 837, 
			778, 779, 838, 
			779, 839, 838, 
			779, 780, 839, 
			780, 840, 839, 
			780, 721, 840, 
			721, 781, 840, 
			781, 782, 841, 
			782, 842, 841, 
			782, 783, 842, 
			783, 843, 842, 
			783, 784, 843, 
			784, 844, 843, 
			784, 785, 844, 
			785, 845, 844, 
			785, 786, 845, 
			786, 846, 845, 
			786, 787, 846, 
			787, 847, 846, 
			787, 788, 847, 
			788, 848, 847, 
			788, 789, 848, 
			789, 849, 848, 
			789, 790, 849, 
			790, 850, 849, 
			790, 791, 850, 
			791, 851, 850, 
			791, 792, 851, 
			792, 852, 851, 
			792, 793, 852, 
			793, 853, 852, 
			793, 794, 853, 
			794, 854, 853, 
			794, 795, 854, 
			795, 855, 854, 
			795, 796, 855, 
			796, 856, 855, 
			796, 797, 856, 
			797, 857, 856, 
			797, 798, 857, 
			798, 858, 857, 
			798, 799, 858, 
			799, 859, 858, 
			799, 800, 859, 
			800, 860, 859, 
			800, 801, 860, 
			801, 861, 860, 
			801, 802, 861, 
			802, 862, 861, 
			802, 803, 862, 
			803, 863, 862, 
			803, 804, 863, 
			804, 864, 863, 
			804, 805, 864, 
			805, 865, 864, 
			805, 806, 865, 
			806, 866, 865, 
			806, 807, 866, 
			807, 867, 866, 
			807, 808, 867, 
			808, 868, 867, 
			808, 809, 868, 
			809, 869, 868, 
			809, 810, 869, 
			810, 870, 869, 
			810, 811, 870, 
			811, 871, 870, 
			811, 812, 871, 
			812, 872, 871, 
			812, 813, 872, 
			813, 873, 872, 
			813, 814, 873, 
			814, 874, 873, 
			814, 815, 874, 
			815, 875, 874, 
			815, 816, 875, 
			816, 876, 875, 
			816, 817, 876, 
			817, 877, 876, 
			817, 818, 877, 
			818, 878, 877, 
			818, 819, 878, 
			819, 879, 878, 
			819, 820, 879, 
			820, 880, 879, 
			820, 821, 880, 
			821, 881, 880, 
			821, 822, 881, 
			822, 882, 881, 
			822, 823, 882, 
			823, 883, 882, 
			823, 824, 883, 
			824, 884, 883, 
			824, 825, 884, 
			825, 885, 884, 
			825, 826, 885, 
			826, 886, 885, 
			826, 827, 886, 
			827, 887, 886, 
			827, 828, 887, 
			828, 888, 887, 
			828, 829, 888, 
			829, 889, 888, 
			829, 830, 889, 
			830, 890, 889, 
			830, 831, 890, 
			831, 891, 890, 
			831, 832, 891, 
			832, 892, 891, 
			832, 833, 892, 
			833, 893, 892, 
			833, 834, 893, 
			834, 894, 893, 
			834, 835, 894, 
			835, 895, 894, 
			835, 836, 895, 
			836, 896, 895, 
			836, 837, 896, 
			837, 897, 896, 
			837, 838, 897, 
			838, 898, 897, 
			838, 839, 898, 
			839, 899, 898, 
			839, 840, 899, 
			840, 900, 899, 
			840, 781, 900, 
			781, 841, 900, 
			841, 842, 901, 
			842, 902, 901, 
			842, 843, 902, 
			843, 903, 902, 
			843, 844, 903, 
			844, 904, 903, 
			844, 845, 904, 
			845, 905, 904, 
			845, 846, 905, 
			846, 906, 905, 
			846, 847, 906, 
			847, 907, 906, 
			847, 848, 907, 
			848, 908, 907, 
			848, 849, 908, 
			849, 909, 908, 
			849, 850, 909, 
			850, 910, 909, 
			850, 851, 910, 
			851, 911, 910, 
			851, 852, 911, 
			852, 912, 911, 
			852, 853, 912, 
			853, 913, 912, 
			853, 854, 913, 
			854, 914, 913, 
			854, 855, 914, 
			855, 915, 914, 
			855, 856, 915, 
			856, 916, 915, 
			856, 857, 916, 
			857, 917, 916, 
			857, 858, 917, 
			858, 918, 917, 
			858, 859, 918, 
			859, 919, 918, 
			859, 860, 919, 
			860, 920, 919, 
			860, 861, 920, 
			861, 921, 920, 
			861, 862, 921, 
			862, 922, 921, 
			862, 863, 922, 
			863, 923, 922, 
			863, 864, 923, 
			864, 924, 923, 
			864, 865, 924, 
			865, 925, 924, 
			865, 866, 925, 
			866, 926, 925, 
			866, 867, 926, 
			867, 927, 926, 
			867, 868, 927, 
			868, 928, 927, 
			868, 869, 928, 
			869, 929, 928, 
			869, 870, 929, 
			870, 930, 929, 
			870, 871, 930, 
			871, 931, 930, 
			871, 872, 931, 
			872, 932, 931, 
			872, 873, 932, 
			873, 933, 932, 
			873, 874, 933, 
			874, 934, 933, 
			874, 875, 934, 
			875, 935, 934, 
			875, 876, 935, 
			876, 936, 935, 
			876, 877, 936, 
			877, 937, 936, 
			877, 878, 937, 
			878, 938, 937, 
			878, 879, 938, 
			879, 939, 938, 
			879, 880, 939, 
			880, 940, 939, 
			880, 881, 940, 
			881, 941, 940, 
			881, 882, 941, 
			882, 942, 941, 
			882, 883, 942, 
			883, 943, 942, 
			883, 884, 943, 
			884, 944, 943, 
			884, 885, 944, 
			885, 945, 944, 
			885, 886, 945, 
			886, 946, 945, 
			886, 887, 946, 
			887, 947, 946, 
			887, 888, 947, 
			888, 948, 947, 
			888, 889, 948, 
			889, 949, 948, 
			889, 890, 949, 
			890, 950, 949, 
			890, 891, 950, 
			891, 951, 950, 
			891, 892, 951, 
			892, 952, 951, 
			892, 893, 952, 
			893, 953, 952, 
			893, 894, 953, 
			894, 954, 953, 
			894, 895, 954, 
			895, 955, 954, 
			895, 896, 955, 
			896, 956, 955, 
			896, 897, 956, 
			897, 957, 956, 
			897, 898, 957, 
			898, 958, 957, 
			898, 899, 958, 
			899, 959, 958, 
			899, 900, 959, 
			900, 960, 959, 
			900, 841, 960, 
			841, 901, 960, 
			901, 902, 961, 
			902, 962, 961, 
			902, 903, 962, 
			903, 963, 962, 
			903, 904, 963, 
			904, 964, 963, 
			904, 905, 964, 
			905, 965, 964, 
			905, 906, 965, 
			906, 966, 965, 
			906, 907, 966, 
			907, 967, 966, 
			907, 908, 967, 
			908, 968, 967, 
			908, 909, 968, 
			909, 969, 968, 
			909, 910, 969, 
			910, 970, 969, 
			910, 911, 970, 
			911, 971, 970, 
			911, 912, 971, 
			912, 972, 971, 
			912, 913, 972, 
			913, 973, 972, 
			913, 914, 973, 
			914, 974, 973, 
			914, 915, 974, 
			915, 975, 974, 
			915, 916, 975, 
			916, 976, 975, 
			916, 917, 976, 
			917, 977, 976, 
			917, 918, 977, 
			918, 978, 977, 
			918, 919, 978, 
			919, 979, 978, 
			919, 920, 979, 
			920, 980, 979, 
			920, 921, 980, 
			921, 981, 980, 
			921, 922, 981, 
			922, 982, 981, 
			922, 923, 982, 
			923, 983, 982, 
			923, 924, 983, 
			924, 984, 983, 
			924, 925, 984, 
			925, 985, 984, 
			925, 926, 985, 
			926, 986, 985, 
			926, 927, 986, 
			927, 987, 986, 
			927, 928, 987, 
			928, 988, 987, 
			928, 929, 988, 
			929, 989, 988, 
			929, 930, 989, 
			930, 990, 989, 
			930, 931, 990, 
			931, 991, 990, 
			931, 932, 991, 
			932, 992, 991, 
			932, 933, 992, 
			933, 993, 992, 
			933, 934, 993, 
			934, 994, 993, 
			934, 935, 994, 
			935, 995, 994, 
			935, 936, 995, 
			936, 996, 995, 
			936, 937, 996, 
			937, 997, 996, 
			937, 938, 997, 
			938, 998, 997, 
			938, 939, 998, 
			939, 999, 998, 
			939, 940, 999, 
			940, 1000, 999, 
			940, 941, 1000, 
			941, 1001, 1000, 
			941, 942, 1001, 
			942, 1002, 1001, 
			942, 943, 1002, 
			943, 1003, 1002, 
			943, 944, 1003, 
			944, 1004, 1003, 
			944, 945, 1004, 
			945, 1005, 1004, 
			945, 946, 1005, 
			946, 1006, 1005, 
			946, 947, 1006, 
			947, 1007, 1006, 
			947, 948, 1007, 
			948, 1008, 1007, 
			948, 949, 1008, 
			949, 1009, 1008, 
			949, 950, 1009, 
			950, 1010, 1009, 
			950, 951, 1010, 
			951, 1011, 1010, 
			951, 952, 1011, 
			952, 1012, 1011, 
			952, 953, 1012, 
			953, 1013, 1012, 
			953, 954, 1013, 
			954, 1014, 1013, 
			954, 955, 1014, 
			955, 1015, 1014, 
			955, 956, 1015, 
			956, 1016, 1015, 
			956, 957, 1016, 
			957, 1017, 1016, 
			957, 958, 1017, 
			958, 1018, 1017, 
			958, 959, 1018, 
			959, 1019, 1018, 
			959, 960, 1019, 
			960, 1020, 1019, 
			960, 901, 1020, 
			901, 961, 1020, 
			961, 962, 1021, 
			962, 1022, 1021, 
			962, 963, 1022, 
			963, 1023, 1022, 
			963, 964, 1023, 
			964, 1024, 1023, 
			964, 965, 1024, 
			965, 1025, 1024, 
			965, 966, 1025, 
			966, 1026, 1025, 
			966, 967, 1026, 
			967, 1027, 1026, 
			967, 968, 1027, 
			968, 1028, 1027, 
			968, 969, 1028, 
			969, 1029, 1028, 
			969, 970, 1029, 
			970, 1030, 1029, 
			970, 971, 1030, 
			971, 1031, 1030, 
			971, 972, 1031, 
			972, 1032, 1031, 
			972, 973, 1032, 
			973, 1033, 1032, 
			973, 974, 1033, 
			974, 1034, 1033, 
			974, 975, 1034, 
			975, 1035, 1034, 
			975, 976, 1035, 
			976, 1036, 1035, 
			976, 977, 1036, 
			977, 1037, 1036, 
			977, 978, 1037, 
			978, 1038, 1037, 
			978, 979, 1038, 
			979, 1039, 1038, 
			979, 980, 1039, 
			980, 1040, 1039, 
			980, 981, 1040, 
			981, 1041, 1040, 
			981, 982, 1041, 
			982, 1042, 1041, 
			982, 983, 1042, 
			983, 1043, 1042, 
			983, 984, 1043, 
			984, 1044, 1043, 
			984, 985, 1044, 
			985, 1045, 1044, 
			985, 986, 1045, 
			986, 1046, 1045, 
			986, 987, 1046, 
			987, 1047, 1046, 
			987, 988, 1047, 
			988, 1048, 1047, 
			988, 989, 1048, 
			989, 1049, 1048, 
			989, 990, 1049, 
			990, 1050, 1049, 
			990, 991, 1050, 
			991, 1051, 1050, 
			991, 992, 1051, 
			992, 1052, 1051, 
			992, 993, 1052, 
			993, 1053, 1052, 
			993, 994, 1053, 
			994, 1054, 1053, 
			994, 995, 1054, 
			995, 1055, 1054, 
			995, 996, 1055, 
			996, 1056, 1055, 
			996, 997, 1056, 
			997, 1057, 1056, 
			997, 998, 1057, 
			998, 1058, 1057, 
			998, 999, 1058, 
			999, 1059, 1058, 
			999, 1000, 1059, 
			1000, 1060, 1059, 
			1000, 1001, 1060, 
			1001, 1061, 1060, 
			1001, 1002, 1061, 
			1002, 1062, 1061, 
			1002, 1003, 1062, 
			1003, 1063, 1062, 
			1003, 1004, 1063, 
			1004, 1064, 1063, 
			1004, 1005, 1064, 
			1005, 1065, 1064, 
			1005, 1006, 1065, 
			1006, 1066, 1065, 
			1006, 1007, 1066, 
			1007, 1067, 1066, 
			1007, 1008, 1067, 
			1008, 1068, 1067, 
			1008, 1009, 1068, 
			1009, 1069, 1068, 
			1009, 1010, 1069, 
			1010, 1070, 1069, 
			1010, 1011, 1070, 
			1011, 1071, 1070, 
			1011, 1012, 1071, 
			1012, 1072, 1071, 
			1012, 1013, 1072, 
			1013, 1073, 1072, 
			1013, 1014, 1073, 
			1014, 1074, 1073, 
			1014, 1015, 1074, 
			1015, 1075, 1074, 
			1015, 1016, 1075, 
			1016, 1076, 1075, 
			1016, 1017, 1076, 
			1017, 1077, 1076, 
			1017, 1018, 1077, 
			1018, 1078, 1077, 
			1018, 1019, 1078, 
			1019, 1079, 1078, 
			1019, 1020, 1079, 
			1020, 1080, 1079, 
			1020, 961, 1080, 
			961, 1021, 1080, 
			1021, 1022, 1081, 
			1022, 1082, 1081, 
			1022, 1023, 1082, 
			1023, 1083, 1082, 
			1023, 1024, 1083, 
			1024, 1084, 1083, 
			1024, 1025, 1084, 
			1025, 1085, 1084, 
			1025, 1026, 1085, 
			1026, 1086, 1085, 
			1026, 1027, 1086, 
			1027, 1087, 1086, 
			1027, 1028, 1087, 
			1028, 1088, 1087, 
			1028, 1029, 1088, 
			1029, 1089, 1088, 
			1029, 1030, 1089, 
			1030, 1090, 1089, 
			1030, 1031, 1090, 
			1031, 1091, 1090, 
			1031, 1032, 1091, 
			1032, 1092, 1091, 
			1032, 1033, 1092, 
			1033, 1093, 1092, 
			1033, 1034, 1093, 
			1034, 1094, 1093, 
			1034, 1035, 1094, 
			1035, 1095, 1094, 
			1035, 1036, 1095, 
			1036, 1096, 1095, 
			1036, 1037, 1096, 
			1037, 1097, 1096, 
			1037, 1038, 1097, 
			1038, 1098, 1097, 
			1038, 1039, 1098, 
			1039, 1099, 1098, 
			1039, 1040, 1099, 
			1040, 1100, 1099, 
			1040, 1041, 1100, 
			1041, 1101, 1100, 
			1041, 1042, 1101, 
			1042, 1102, 1101, 
			1042, 1043, 1102, 
			1043, 1103, 1102, 
			1043, 1044, 1103, 
			1044, 1104, 1103, 
			1044, 1045, 1104, 
			1045, 1105, 1104, 
			1045, 1046, 1105, 
			1046, 1106, 1105, 
			1046, 1047, 1106, 
			1047, 1107, 1106, 
			1047, 1048, 1107, 
			1048, 1108, 1107, 
			1048, 1049, 1108, 
			1049, 1109, 1108, 
			1049, 1050, 1109, 
			1050, 1110, 1109, 
			1050, 1051, 1110, 
			1051, 1111, 1110, 
			1051, 1052, 1111, 
			1052, 1112, 1111, 
			1052, 1053, 1112, 
			1053, 1113, 1112, 
			1053, 1054, 1113, 
			1054, 1114, 1113, 
			1054, 1055, 1114, 
			1055, 1115, 1114, 
			1055, 1056, 1115, 
			1056, 1116, 1115, 
			1056, 1057, 1116, 
			1057, 1117, 1116, 
			1057, 1058, 1117, 
			1058, 1118, 1117, 
			1058, 1059, 1118, 
			1059, 1119, 1118, 
			1059, 1060, 1119, 
			1060, 1120, 1119, 
			1060, 1061, 1120, 
			1061, 1121, 1120, 
			1061, 1062, 1121, 
			1062, 1122, 1121, 
			1062, 1063, 1122, 
			1063, 1123, 1122, 
			1063, 1064, 1123, 
			1064, 1124, 1123, 
			1064, 1065, 1124, 
			1065, 1125, 1124, 
			1065, 1066, 1125, 
			1066, 1126, 1125, 
			1066, 1067, 1126, 
			1067, 1127, 1126, 
			1067, 1068, 1127, 
			1068, 1128, 1127, 
			1068, 1069, 1128, 
			1069, 1129, 1128, 
			1069, 1070, 1129, 
			1070, 1130, 1129, 
			1070, 1071, 1130, 
			1071, 1131, 1130, 
			1071, 1072, 1131, 
			1072, 1132, 1131, 
			1072, 1073, 1132, 
			1073, 1133, 1132, 
			1073, 1074, 1133, 
			1074, 1134, 1133, 
			1074, 1075, 1134, 
			1075, 1135, 1134, 
			1075, 1076, 1135, 
			1076, 1136, 1135, 
			1076, 1077, 1136, 
			1077, 1137, 1136, 
			1077, 1078, 1137, 
			1078, 1138, 1137, 
			1078, 1079, 1138, 
			1079, 1139, 1138, 
			1079, 1080, 1139, 
			1080, 1140, 1139, 
			1080, 1021, 1140, 
			1021, 1081, 1140, 

			1081, 1082, 1141, 
			1082, 1083, 1141, 
			1083, 1084, 1141, 
			1084, 1085, 1141, 
			1085, 1086, 1141, 
			1086, 1087, 1141, 
			1087, 1088, 1141, 
			1088, 1089, 1141, 
			1089, 1090, 1141, 
			1090, 1091, 1141, 
			1091, 1092, 1141, 
			1092, 1093, 1141, 
			1093, 1094, 1141, 
			1094, 1095, 1141, 
			1095, 1096, 1141, 
			1096, 1097, 1141, 
			1097, 1098, 1141, 
			1098, 1099, 1141, 
			1099, 1100, 1141, 
			1100, 1101, 1141, 
			1101, 1102, 1141, 
			1102, 1103, 1141, 
			1103, 1104, 1141, 
			1104, 1105, 1141, 
			1105, 1106, 1141, 
			1106, 1107, 1141, 
			1107, 1108, 1141, 
			1108, 1109, 1141, 
			1109, 1110, 1141, 
			1110, 1111, 1141, 
			1111, 1112, 1141, 
			1112, 1113, 1141, 
			1113, 1114, 1141, 
			1114, 1115, 1141, 
			1115, 1116, 1141, 
			1116, 1117, 1141, 
			1117, 1118, 1141, 
			1118, 1119, 1141, 
			1119, 1120, 1141, 
			1120, 1121, 1141, 
			1121, 1122, 1141, 
			1122, 1123, 1141, 
			1123, 1124, 1141, 
			1124, 1125, 1141, 
			1125, 1126, 1141, 
			1126, 1127, 1141, 
			1127, 1128, 1141, 
			1128, 1129, 1141, 
			1129, 1130, 1141, 
			1130, 1131, 1141, 
			1131, 1132, 1141, 
			1132, 1133, 1141, 
			1133, 1134, 1141, 
			1134, 1135, 1141, 
			1135, 1136, 1141, 
			1136, 1137, 1141, 
			1137, 1138, 1141, 
			1138, 1139, 1141, 
			1139, 1140, 1141, 
			1140, 1081, 1141, 
		};
		
		m_indexCount = ARRAYSIZE(SphereIndices);

		D3D11_SUBRESOURCE_DATA indexBufferData = { 0 };
		indexBufferData.pSysMem = SphereIndices;
		indexBufferData.SysMemPitch = 0;
		indexBufferData.SysMemSlicePitch = 0;
		CD3D11_BUFFER_DESC indexBufferDesc(sizeof(SphereIndices), D3D11_BIND_INDEX_BUFFER);
		DX::ThrowIfFailed(
			m_deviceResources->GetD3DDevice()->CreateBuffer(
				&indexBufferDesc,
				&indexBufferData,
				&m_indexBuffer
			)
		);
	});


	// 加载模型后，就可以呈现该对象了。
	createSphereTask.then([this]() {
		m_loadingComplete = true;
	});
}

void SphereRenderer::ReleaseDeviceDependentResources()
{
	m_loadingComplete = false;
	m_vertexShader.Reset();
	m_inputLayout.Reset();
	m_pixelShader.Reset();
	m_constantBuffer.Reset();
	m_vertexBuffer.Reset();
	m_indexBuffer.Reset();
}